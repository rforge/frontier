
R version 3.0.1 (2013-05-16) -- "Good Sport"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library( frontier )
Loading required package: plm
Loading required package: bdsmatrix

Attaching package: 'bdsmatrix'

The following object is masked from 'package:base':

    backsolve

Loading required package: nlme
Loading required package: Formula
Loading required package: MASS
Loading required package: sandwich
Loading required package: zoo

Attaching package: 'zoo'

The following object is masked from 'package:base':

    as.Date, as.Date.numeric

Loading required package: micEcon
Loading required package: miscTools
Loading required package: lmtest

Please cite the 'frontier' package as:
Tim Coelli and Arne Henningsen (2013). frontier: Stochastic Frontier Analysis. R package version 1.0-0. http://CRAN.R-Project.org/package=frontier.

If you have questions, suggestions, or comments regarding the 'frontier' package, please use a forum or 'tracker' at frontier's R-Forge site:
https://r-forge.r-project.org/projects/frontier/
> options( digits = 5 )
> 
> ## example data included in FRONTIER 4.1 (cross-section data)
> data( front41Data )
> front41Data$firmNo <- c( 1:nrow( front41Data ) )
> 
> ## non-existing variable
> try( sfa( log( output ) ~ log( capital7 ) + log( labour ),
+    data = front41Data ) )
Error in eval(expr, envir, enclos) : object 'capital7' not found
> 
> ## nParamTotal > nObs
> try( sfa( log( output ) ~ log( capital ) + log( labour ),
+    data = front41Data[ 1:4, ] ) )
Error in sfa(log(output) ~ log(capital) + log(labour), data = front41Data[1:4,  : 
  the model cannot be estimated, because the number of parameters (5) is larger than the number of observations (4)
> 
> ## nParamTotal >> nObs
> try( sfa( log( output ) ~ log( capital ) + log( labour ),
+    data = front41Data[ 1:2, ] ) )
Error in sfa(log(output) ~ log(capital) + log(labour), data = front41Data[1:2,  : 
  the model cannot be estimated, because the number of parameters (5) is larger than the number of observations (2)
> 
> ## nParamTotal > number of valid observations
> try( sfa( log( output ) ~ log( capital ) + log( labour ) + log( firmNo - 56 ),
+    data = front41Data ) )
Error in sfa(log(output) ~ log(capital) + log(labour) + log(firmNo - 56),  : 
  the model cannot be estimated, because the number of parameters (6) is larger than the number of valid observations (4)
In addition: Warning message:
In log(firmNo - 56) : NaNs produced
> 
> ## the dependent variable has only infinite values
> try( sfa( log( 0 * output ) ~ log( capital ) + log( labour ),
+    data = front41Data ) )
Error in sfa(log(0 * output) ~ log(capital) + log(labour), data = front41Data) : 
  the dependent variable has no valid observations
> 
> ## the dependent variable has only NA values
> try( sfa( log( -output ) ~ log( capital ) + log( labour ),
+    data = front41Data ) )
Error in sfa(log(-output) ~ log(capital) + log(labour), data = front41Data) : 
  the dependent variable has no valid observations
In addition: Warning message:
In log(-output) : NaNs produced
> 
> ## one of the regressors has only infinite values
> try( sfa( log( output ) ~ log( 0 * capital ) + log( labour ),
+    data = front41Data ) )
Error in sfa(log(output) ~ log(0 * capital) + log(labour), data = front41Data) : 
  regressor 'log(0 * capital)' has no valid observations
> 
> ## one of the regressors has only NA values
> try( sfa( log( output ) ~ log( capital ) + log( -labour ),
+    data = front41Data ) )
Error in sfa(log(output) ~ log(capital) + log(-labour), data = front41Data) : 
  regressor 'log(-labour)' has no valid observations
In addition: Warning message:
In log(-labour) : NaNs produced
> 
> ## one of the regressors of the inefficiency term has only infinite values
> try( sfa( log( output ) ~ log( capital ) + log( labour ) | log( 0 * firmNo ),
+    data = front41Data ) )
Error in sfa(log(output) ~ log(capital) + log(labour) | log(0 * firmNo),  : 
  the regressor for the inefficiency term 'log(0 * firmNo)' has no valid observations
> 
> ## one of the regressors of the inefficiency term has only NA values
> try( sfa( log( output ) ~ log( capital ) + log( labour ) | log(-firmNo ),
+    data = front41Data ) )
Error in sfa(log(output) ~ log(capital) + log(labour) | log(-firmNo),  : 
  the regressor for the inefficiency term 'log(-firmNo)' has no valid observations
In addition: Warning message:
In log(-firmNo) : NaNs produced
> 
> ## no convergence
> a1 <- sfa( log( output ) ~ log( capital ) + log( labour ),
+    data = front41Data, maxit = 2 )
Warning message:
In sfa(log(output) ~ log(capital) + log(labour), data = front41Data,  :
  the maximum number of iterations has been reached; please try again using different starting values and/or increase the maximum number of iterations
> summary( a1 )
Error Components Frontier (see Battese & Coelli 1992)
Inefficiency decreases the endogenous variable (as in a production function)
The dependent variable is logged
Iterative ML estimation terminated after 2 iterations:
maximum number of iterations reached

final maximum likelihood estimates
             Estimate Std. Error z value Pr(>|z|)
(Intercept)     0.579      0.974    0.59     0.55
log(capital)    0.280      0.951    0.29     0.77
log(labour)     0.533      0.402    1.33     0.18
sigmaSq         0.218      0.995    0.22     0.83
gamma           0.801      0.998    0.80     0.42
log likelihood value: -17.033 

cross-sectional data
total number of observations = 60 

mean efficiency: 0.73919 
> 
> ## no convergence, L(MLE) < L(OLS)
> a2 <- sfa( log( output ) ~ log( capital ) + log( labour ),
+    data = front41Data, maxit = 2, start = c( 1, 0, 0, 1, 0.5 ) )
Warning message:
In sfa(log(output) ~ log(capital) + log(labour), data = front41Data,  :
  the maximum number of iterations has been reached and the likelihood value of the ML estimation is less than that obtained using OLS; please try again using different starting values and/or increase the maximum number of iterations
> summary( a2 )
Error Components Frontier (see Battese & Coelli 1992)
Inefficiency decreases the endogenous variable (as in a production function)
The dependent variable is logged
Iterative ML estimation terminated after 2 iterations:
maximum number of iterations reached

final maximum likelihood estimates
             Estimate Std. Error z value Pr(>|z|)
(Intercept)     1.122      0.979    1.15     0.25
log(capital)    0.201      0.960    0.21     0.83
log(labour)     0.506      0.581    0.87     0.38
sigmaSq         0.977      0.983    0.99     0.32
gamma           0.361      0.903    0.40     0.69
log likelihood value: -56.035 

cross-sectional data
total number of observations = 60 

mean efficiency: 0.64843 
> 
> ## no convergence, L(MLE) < L(OLS), wrong skewness
> a3 <- sfa( log( output ) ~ log( capital ) + log( labour ),
+    data = front41Data, maxit = 2, ineffDecrease = FALSE )
Warning messages:
1: In sfa(log(output) ~ log(capital) + log(labour), data = front41Data,  :
  the residuals of the OLS estimates are left-skewed and the likelihood value of the ML estimation is less than that obtained using OLS; this usually indicates that there is no inefficiency or that the model is misspecified
2: In sfa(log(output) ~ log(capital) + log(labour), data = front41Data,  :
  the maximum number of iterations has been reached; please try again using different starting values and/or increase the maximum number of iterations
> summary( a3, farrell = FALSE )
Error Components Frontier (see Battese & Coelli 1992)
Inefficiency increases the endogenous variable (as in a cost function)
The dependent variable is logged
Iterative ML estimation terminated after 2 iterations:
maximum number of iterations reached

final maximum likelihood estimates
             Estimate Std. Error z value Pr(>|z|)
(Intercept)    0.1853     0.9859    0.19     0.85
log(capital)   0.2806     0.9757    0.29     0.77
log(labour)    0.5336     0.7653    0.70     0.49
sigmaSq        0.1122     0.7184    0.16     0.88
gamma          0.0485     0.9878    0.05     0.96
log likelihood value: -18.46 

cross-sectional data
total number of observations = 60 

mean efficiency: 1.0617 
> 
> ## L(MLE) < L(OLS)
> a4 <- sfa( log( output ) ~ log( capital ) + log( labour ),
+    data = front41Data, start = c( 1, 0, 0, 1, 0.999995 ) )
Warning messages:
1: In sfa(log(output) ~ log(capital) + log(labour), data = front41Data,  :
  the likelihood value of the ML estimation is less than that obtained using OLS; this indicates that the likelihood maximization did not converge to the global maximum or that there is no inefficiency (you could try again using different starting values)
2: In sfa(log(output) ~ log(capital) + log(labour), data = front41Data,  :
  the parameter 'gamma' is close to the boundary of the parameter space [0,1]: this can cause convergence problems and can negatively affect the validity and reliability of statistical tests and might be caused by model misspecification
> summary( a4 )
Error Components Frontier (see Battese & Coelli 1992)
Inefficiency decreases the endogenous variable (as in a production function)
The dependent variable is logged
Iterative ML estimation terminated after 10 iterations:
cannot find a parameter vector that results in a log-likelihood value
larger than the log-likelihood value obtained in the previous step

final maximum likelihood estimates
              Estimate Std. Error z value Pr(>|z|)    
(Intercept)  -5.52e+00   3.71e+00   -1.49     0.14    
log(capital)  6.63e-01   8.92e-01    0.74     0.46    
log(labour)   1.50e+00   9.35e-01    1.60     0.11    
sigmaSq       3.28e+01   2.66e+00   12.36   <2e-16 ***
gamma         1.00e-08   2.85e-06    0.00     1.00    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
log likelihood value: -162.91 

cross-sectional data
total number of observations = 60 

mean efficiency: 0.99954 
> 
> ## too many starting values 
> try( sfa( log( output) ~ log( capital ) + log( labour ), data = front41Data,
+    truncNorm = TRUE, startVal = c( 0.5, 0.3, 0.5, 0.5, 0.9, -1, 0.3 ) ) )
Error in sfa(log(output) ~ log(capital) + log(labour), data = front41Data,  : 
  wrong number of starting values (you provided 7 starting values but the model has 6 parameters)
> 
> ## too few starting values 
> try( sfa( log( output) ~ log( capital ) + log( labour ), data = front41Data,
+    truncNorm = TRUE, startVal = c( 0.5, 0.3, 0.5, 0.5, 0.9 ) ) )
Error in sfa(log(output) ~ log(capital) + log(labour), data = front41Data,  : 
  wrong number of starting values (you provided 5 starting values but the model has 6 parameters)
> 
> ## load data abour rice production in the Phillipines
> data( "riceProdPhil")
> 
> ## nobs > nn * nt 
> rd <- riceProdPhil
> rd <- rbind( rd, rd[ 11, ] )
> rd <- plm.data( rd, c( "FMERCODE", "YEARDUM" ) )
> try( sfa( log( PROD ) ~ log( AREA ) + log( LABOR ) + log( NPK ), data = rd ) )
Error in sfa(log(PROD) ~ log(AREA) + log(LABOR) + log(NPK), data = rd) : 
  more than one observation for firm '11' in period '1'
> 
> ## non-positive firm number (works now)
> rd <- riceProdPhil
> rd$FMERCODE <- rd$FMERCODE - 2
> rd <- plm.data( rd, c( "FMERCODE", "YEARDUM" ) )
> b1 <- sfa( log( PROD ) ~ log( AREA ) + log( LABOR ) + log( NPK ), data = rd )
> summary( b1 )
Error Components Frontier (see Battese & Coelli 1992)
Inefficiency decreases the endogenous variable (as in a production function)
The dependent variable is logged
Iterative ML estimation terminated after 11 iterations:
log likelihood values and parameters of two successive iterations
are within the tolerance limit

final maximum likelihood estimates
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)  -0.8322     0.2752   -3.02   0.0025 ** 
log(AREA)     0.4539     0.0638    7.11  1.1e-12 ***
log(LABOR)    0.2889     0.0636    4.54  5.6e-06 ***
log(NPK)      0.2275     0.0409    5.57  2.6e-08 ***
sigmaSq       0.1554     0.0242    6.42  1.4e-10 ***
gamma         0.4643     0.0880    5.27  1.3e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
log likelihood value: -86.43 

panel data
number of cross-sections = 43 
number of time periods = 8 
total number of observations = 344 
thus there are 0 observations not in the panel

mean efficiency: 0.8188 
> efficiencies( b1 )
   efficiency
-1    0.73488
0     0.93354
1     0.73567
2     0.90480
3     0.86461
4     0.80844
5     0.92313
6     0.81500
7     0.87228
8     0.85394
9     0.60216
10    0.94917
11    0.78200
12    0.87036
13    0.71232
14    0.90580
15    0.87882
16    0.92386
17    0.85864
18    0.90460
19    0.80147
20    0.82777
21    0.70807
22    0.70739
23    0.83631
24    0.85574
25    0.80021
26    0.93826
27    0.70726
28    0.60753
29    0.91529
30    0.84763
31    0.88773
32    0.49784
33    0.90838
34    0.69556
35    0.92660
36    0.93337
37    0.74233
38    0.66900
39    0.93615
40    0.89945
41    0.72491
> 
> ## firm number > number of firms (works now)
> rd <- riceProdPhil
> rd$FMERCODE[ rd$FMERCODE == 9 ] <- 47
> rd <- plm.data( rd, c( "FMERCODE", "YEARDUM" ) )
> b2 <- sfa( log( PROD ) ~ log( AREA ) + log( LABOR ) + log( NPK ), data = rd )
> summary( b2 )
Error Components Frontier (see Battese & Coelli 1992)
Inefficiency decreases the endogenous variable (as in a production function)
The dependent variable is logged
Iterative ML estimation terminated after 11 iterations:
log likelihood values and parameters of two successive iterations
are within the tolerance limit

final maximum likelihood estimates
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)  -0.8322     0.2752   -3.02   0.0025 ** 
log(AREA)     0.4539     0.0638    7.11  1.1e-12 ***
log(LABOR)    0.2889     0.0636    4.54  5.6e-06 ***
log(NPK)      0.2275     0.0409    5.57  2.6e-08 ***
sigmaSq       0.1554     0.0242    6.42  1.4e-10 ***
gamma         0.4643     0.0880    5.27  1.3e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
log likelihood value: -86.43 

panel data
number of cross-sections = 43 
number of time periods = 8 
total number of observations = 344 
thus there are 0 observations not in the panel

mean efficiency: 0.8188 
> efficiencies( b2 )
   efficiency
1     0.73488
2     0.93354
3     0.73567
4     0.90480
5     0.86461
6     0.80844
7     0.92313
8     0.81500
10    0.85394
11    0.60216
12    0.94917
13    0.78200
14    0.87036
15    0.71232
16    0.90580
17    0.87882
18    0.92386
19    0.85864
20    0.90460
21    0.80147
22    0.82777
23    0.70807
24    0.70739
25    0.83631
26    0.85574
27    0.80021
28    0.93826
29    0.70726
30    0.60753
31    0.91529
32    0.84763
33    0.88773
34    0.49784
35    0.90838
36    0.69556
37    0.92660
38    0.93337
39    0.74233
40    0.66900
41    0.93615
42    0.89945
43    0.72491
47    0.87228
> # now with NA
> rd <- riceProdPhil
> rd$PROD[ rd$FMERCODE == 22 ] <- NA
> rd <- plm.data( rd, c( "FMERCODE", "YEARDUM" ) )
> b2b <- sfa( log( PROD ) ~ log( AREA ) + log( LABOR ) + log( NPK ), data = rd )
> summary( b2b )
Error Components Frontier (see Battese & Coelli 1992)
Inefficiency decreases the endogenous variable (as in a production function)
The dependent variable is logged
Iterative ML estimation terminated after 11 iterations:
log likelihood values and parameters of two successive iterations
are within the tolerance limit

final maximum likelihood estimates
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)  -0.8422     0.2809   -3.00   0.0027 ** 
log(AREA)     0.4507     0.0649    6.94  3.9e-12 ***
log(LABOR)    0.2858     0.0643    4.45  8.7e-06 ***
log(NPK)      0.2334     0.0413    5.65  1.6e-08 ***
sigmaSq       0.1576     0.0251    6.27  3.5e-10 ***
gamma         0.4707     0.0884    5.33  1.0e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
log likelihood value: -85.171 

panel data
number of cross-sections = 42 
number of time periods = 8 
total number of observations = 336 
thus there are 0 observations not in the panel

mean efficiency: 0.81653 
> efficiencies( b2b )
   efficiency
1     0.73082
2     0.93249
3     0.73288
4     0.90388
5     0.86361
6     0.80601
7     0.92085
8     0.81135
9     0.87089
10    0.85122
11    0.60013
12    0.94830
13    0.77994
14    0.86905
15    0.70898
16    0.90450
17    0.87576
18    0.92255
19    0.85629
20    0.90255
21    0.80023
23    0.70396
24    0.70510
25    0.83302
26    0.85256
27    0.79616
28    0.93693
29    0.70563
30    0.60584
31    0.91419
32    0.84447
33    0.88565
34    0.49693
35    0.90694
36    0.69305
37    0.92485
38    0.93233
39    0.74115
40    0.66590
41    0.93633
42    0.89782
43    0.72295
> 
> ## non-positive period number (works now)
> rd <- riceProdPhil
> rd$YEARDUM <- rd$YEARDUM - 2
> rd <- plm.data( rd, c( "FMERCODE", "YEARDUM" ) )
> b3 <- sfa( log( PROD ) ~ log( AREA ) + log( LABOR ) + log( NPK ), data = rd )
> summary( b3 )
Error Components Frontier (see Battese & Coelli 1992)
Inefficiency decreases the endogenous variable (as in a production function)
The dependent variable is logged
Iterative ML estimation terminated after 11 iterations:
log likelihood values and parameters of two successive iterations
are within the tolerance limit

final maximum likelihood estimates
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)  -0.8322     0.2752   -3.02   0.0025 ** 
log(AREA)     0.4539     0.0638    7.11  1.1e-12 ***
log(LABOR)    0.2889     0.0636    4.54  5.6e-06 ***
log(NPK)      0.2275     0.0409    5.57  2.6e-08 ***
sigmaSq       0.1554     0.0242    6.42  1.4e-10 ***
gamma         0.4643     0.0880    5.27  1.3e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
log likelihood value: -86.43 

panel data
number of cross-sections = 43 
number of time periods = 8 
total number of observations = 344 
thus there are 0 observations not in the panel

mean efficiency: 0.8188 
> 
> ## period number > number of periods (works now)
> rd <- riceProdPhil
> rd$YEARDUM[ rd$YEARDUM == 4 ] <- 10
> rd <- plm.data( rd, c( "FMERCODE", "YEARDUM" ) )
> b4 <- sfa( log( PROD ) ~ log( AREA ) + log( LABOR ) + log( NPK ), data = rd )
> summary( b4 )
Error Components Frontier (see Battese & Coelli 1992)
Inefficiency decreases the endogenous variable (as in a production function)
The dependent variable is logged
Iterative ML estimation terminated after 11 iterations:
log likelihood values and parameters of two successive iterations
are within the tolerance limit

final maximum likelihood estimates
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)  -0.8322     0.2752   -3.02   0.0025 ** 
log(AREA)     0.4539     0.0638    7.11  1.1e-12 ***
log(LABOR)    0.2889     0.0636    4.54  5.6e-06 ***
log(NPK)      0.2275     0.0409    5.57  2.6e-08 ***
sigmaSq       0.1554     0.0242    6.42  1.4e-10 ***
gamma         0.4643     0.0880    5.27  1.3e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
log likelihood value: -86.43 

panel data
number of cross-sections = 43 
number of time periods = 8 
total number of observations = 344 
thus there are 0 observations not in the panel

mean efficiency: 0.8188 
> # now with NA
> rd <- riceProdPhil
> rd$AREA[ rd$YEARDUM == 4 ] <- NA
> rd <- plm.data( rd, c( "FMERCODE", "YEARDUM" ) )
> b4b <- sfa( log( PROD ) ~ log( AREA ) + log( LABOR ) + log( NPK ), data = rd )
> summary( b4b )
Error Components Frontier (see Battese & Coelli 1992)
Inefficiency decreases the endogenous variable (as in a production function)
The dependent variable is logged
Iterative ML estimation terminated after 11 iterations:
log likelihood values and parameters of two successive iterations
are within the tolerance limit

final maximum likelihood estimates
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)  -0.7608     0.3029   -2.51  0.01201 *  
log(AREA)     0.4807     0.0707    6.80  1.0e-11 ***
log(LABOR)    0.2540     0.0712    3.57  0.00036 ***
log(NPK)      0.2418     0.0458    5.28  1.3e-07 ***
sigmaSq       0.1644     0.0265    6.19  5.9e-10 ***
gamma         0.4750     0.0900    5.28  1.3e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
log likelihood value: -83.11 

panel data
number of cross-sections = 43 
number of time periods = 7 
total number of observations = 301 
thus there are 0 observations not in the panel

mean efficiency: 0.81406 
> 
> ## firm without valid observations (works now)
> rd <- riceProdPhil
> rd$PROD[ rd$FMERCODE == 12 ] <- NA
> rd <- plm.data( rd, c( "FMERCODE", "YEARDUM" ) )
> b5 <- sfa( log( PROD ) ~ log( AREA ) + log( LABOR ) + log( NPK ), data = rd )
> summary( b5 )
Error Components Frontier (see Battese & Coelli 1992)
Inefficiency decreases the endogenous variable (as in a production function)
The dependent variable is logged
Iterative ML estimation terminated after 11 iterations:
log likelihood values and parameters of two successive iterations
are within the tolerance limit

final maximum likelihood estimates
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)  -0.8755     0.2763   -3.17   0.0015 ** 
log(AREA)     0.4838     0.0679    7.12  1.1e-12 ***
log(LABOR)    0.2888     0.0645    4.48  7.5e-06 ***
log(NPK)      0.2296     0.0412    5.57  2.6e-08 ***
sigmaSq       0.1488     0.0227    6.56  5.4e-11 ***
gamma         0.4369     0.0900    4.86  1.2e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
log likelihood value: -84.079 

panel data
number of cross-sections = 42 
number of time periods = 8 
total number of observations = 336 
thus there are 0 observations not in the panel

mean efficiency: 0.82647 
> efficiencies( b5 )
   efficiency
1     0.74196
2     0.93151
3     0.73389
4     0.91470
5     0.86377
6     0.84621
7     0.92644
8     0.82810
9     0.87370
10    0.85525
11    0.62444
13    0.80284
14    0.87839
15    0.76193
16    0.92430
17    0.87592
18    0.91688
19    0.85479
20    0.90300
21    0.80169
22    0.84464
23    0.69945
24    0.71313
25    0.83001
26    0.87431
27    0.81267
28    0.94529
29    0.72068
30    0.64102
31    0.92959
32    0.87342
33    0.90424
34    0.51908
35    0.91228
36    0.71084
37    0.93600
38    0.93622
39    0.77862
40    0.68310
41    0.94267
42    0.90429
43    0.74060
> 
> 
> proc.time()
   user  system elapsed 
  1.724   0.052   1.766 
