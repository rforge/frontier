
R version 3.0.2 (2013-09-25) -- "Frisbee Sailing"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library( "frontier" )
Loading required package: micEcon
Loading required package: miscTools
Loading required package: lmtest
Loading required package: zoo

Attaching package: 'zoo'

The following objects are masked from 'package:base':

    as.Date, as.Date.numeric


Please cite the 'frontier' package as:
Tim Coelli and Arne Henningsen (2013). frontier: Stochastic Frontier Analysis. R package version 1.1. http://CRAN.R-Project.org/package=frontier.

If you have questions, suggestions, or comments regarding the 'frontier' package, please use a forum or 'tracker' at frontier's R-Forge site:
https://r-forge.r-project.org/projects/frontier/
> library( "plm" )
Loading required package: bdsmatrix

Attaching package: 'bdsmatrix'

The following object is masked from 'package:base':

    backsolve

Loading required package: nlme
Loading required package: Formula
Loading required package: MASS
Loading required package: sandwich
> options( digits = 5 )
> 
> ## example data included in FRONTIER 4.1 (cross-section data)
> data( front41Data )
> front41Data$firmNo <- c( 1:nrow( front41Data ) )
> 
> ## non-existing variable
> try( sfa( log( output ) ~ log( capital7 ) + log( labour ),
+    data = front41Data ) )
Error in eval(expr, envir, enclos) : object 'capital7' not found
> 
> ## nParamTotal > nObs
> try( sfa( log( output ) ~ log( capital ) + log( labour ),
+    data = front41Data[ 1:4, ] ) )
Error in sfa(log(output) ~ log(capital) + log(labour), data = front41Data[1:4,  : 
  the model cannot be estimated, because the number of parameters (5) is larger than the number of observations (4)
> 
> ## nParamTotal >> nObs
> try( sfa( log( output ) ~ log( capital ) + log( labour ),
+    data = front41Data[ 1:2, ] ) )
Error in sfa(log(output) ~ log(capital) + log(labour), data = front41Data[1:2,  : 
  the model cannot be estimated, because the number of parameters (5) is larger than the number of observations (2)
> 
> ## nParamTotal > number of valid observations
> try( sfa( log( output ) ~ log( capital ) + log( labour ) + log( firmNo - 56 ),
+    data = front41Data ) )
Error in sfa(log(output) ~ log(capital) + log(labour) + log(firmNo - 56),  : 
  the model cannot be estimated, because the number of parameters (6) is larger than the number of valid observations (4)
In addition: Warning message:
In log(firmNo - 56) : NaNs produced
> 
> ## the dependent variable has only infinite values
> try( sfa( log( 0 * output ) ~ log( capital ) + log( labour ),
+    data = front41Data ) )
Error in sfa(log(0 * output) ~ log(capital) + log(labour), data = front41Data) : 
  the dependent variable has no valid observations
> 
> ## the dependent variable has only NA values
> try( sfa( log( -output ) ~ log( capital ) + log( labour ),
+    data = front41Data ) )
Error in sfa(log(-output) ~ log(capital) + log(labour), data = front41Data) : 
  the dependent variable has no valid observations
In addition: Warning message:
In log(-output) : NaNs produced
> 
> ## one of the regressors has only infinite values
> try( sfa( log( output ) ~ log( 0 * capital ) + log( labour ),
+    data = front41Data ) )
Error in sfa(log(output) ~ log(0 * capital) + log(labour), data = front41Data) : 
  regressor 'log(0 * capital)' has no valid observations
> 
> ## one of the regressors has only NA values
> try( sfa( log( output ) ~ log( capital ) + log( -labour ),
+    data = front41Data ) )
Error in sfa(log(output) ~ log(capital) + log(-labour), data = front41Data) : 
  regressor 'log(-labour)' has no valid observations
In addition: Warning message:
In log(-labour) : NaNs produced
> 
> ## one of the regressors of the inefficiency term has only infinite values
> try( sfa( log( output ) ~ log( capital ) + log( labour ) | log( 0 * firmNo ),
+    data = front41Data ) )
Error in sfa(log(output) ~ log(capital) + log(labour) | log(0 * firmNo),  : 
  the regressor for the inefficiency term 'log(0 * firmNo)' has no valid observations
> 
> ## one of the regressors of the inefficiency term has only NA values
> try( sfa( log( output ) ~ log( capital ) + log( labour ) | log(-firmNo ),
+    data = front41Data ) )
Error in sfa(log(output) ~ log(capital) + log(labour) | log(-firmNo),  : 
  the regressor for the inefficiency term 'log(-firmNo)' has no valid observations
In addition: Warning message:
In log(-firmNo) : NaNs produced
> 
> ## no convergence
> a1 <- sfa( log( output ) ~ log( capital ) + log( labour ),
+    data = front41Data, maxit = 2 )
Warning message:
In sfa(log(output) ~ log(capital) + log(labour), data = front41Data,  :
  the maximum number of iterations has been reached; please try again using different starting values and/or increase the maximum number of iterations
> print( summary( a1 ), digits = 2 )
Error Components Frontier (see Battese & Coelli 1992)
Inefficiency decreases the endogenous variable (as in a production function)
The dependent variable is logged
Iterative ML estimation terminated after 2 iterations:
maximum number of iterations reached

final maximum likelihood estimates
             Estimate Std. Error z value Pr(>|z|)
(Intercept)      0.58       0.97     0.6      0.6
log(capital)     0.28       0.95     0.3      0.8
log(labour)      0.53       0.40     1.3      0.2
sigmaSq          0.22       1.00     0.2      0.8
gamma            0.80       1.00     0.8      0.4
log likelihood value: -17.033 

cross-sectional data
total number of observations = 60 

mean efficiency: 0.73919 
> 
> ## no convergence, L(MLE) < L(OLS)
> a2 <- sfa( log( output ) ~ log( capital ) + log( labour ),
+    data = front41Data, maxit = 2, start = c( 1, 0, 0, 1, 0.5 ) )
Warning message:
In sfa(log(output) ~ log(capital) + log(labour), data = front41Data,  :
  the maximum number of iterations has been reached and the likelihood value of the ML estimation is less than that obtained using OLS; please try again using different starting values and/or increase the maximum number of iterations
> print( summary( a2 ), digits = 2 )
Error Components Frontier (see Battese & Coelli 1992)
Inefficiency decreases the endogenous variable (as in a production function)
The dependent variable is logged
Iterative ML estimation terminated after 2 iterations:
maximum number of iterations reached

final maximum likelihood estimates
             Estimate Std. Error z value Pr(>|z|)
(Intercept)      1.12       0.98     1.1      0.3
log(capital)     0.20       0.96     0.2      0.8
log(labour)      0.51       0.58     0.9      0.4
sigmaSq          0.98       0.98     1.0      0.3
gamma            0.36       0.90     0.4      0.7
log likelihood value: -56.035 

cross-sectional data
total number of observations = 60 

mean efficiency: 0.64843 
> 
> ## no convergence, L(MLE) < L(OLS), wrong skewness
> a3 <- sfa( log( output ) ~ log( capital ) + log( labour ),
+    data = front41Data, maxit = 2, ineffDecrease = FALSE )
Warning messages:
1: In sfa(log(output) ~ log(capital) + log(labour), data = front41Data,  :
  the residuals of the OLS estimates are left-skewed and the likelihood value of the ML estimation is less than that obtained using OLS; this usually indicates that there is no inefficiency or that the model is misspecified
2: In sfa(log(output) ~ log(capital) + log(labour), data = front41Data,  :
  the maximum number of iterations has been reached; please try again using different starting values and/or increase the maximum number of iterations
> print( summary( a3, effMinusU = FALSE ), digits = 1 )
Error Components Frontier (see Battese & Coelli 1992)
Inefficiency increases the endogenous variable (as in a cost function)
The dependent variable is logged
Iterative ML estimation terminated after 2 iterations:
maximum number of iterations reached

final maximum likelihood estimates
             Estimate Std. Error z value Pr(>|z|)
(Intercept)      0.19       0.99     0.2      0.9
log(capital)     0.28       0.98     0.3      0.8
log(labour)      0.53       0.77     0.7      0.5
sigmaSq          0.11       0.72     0.2      0.9
gamma            0.05       0.99     0.0      1.0
log likelihood value: -18.46 

cross-sectional data
total number of observations = 60 

mean efficiency: 1.0617 
> 
> ## L(MLE) < L(OLS)
> a4 <- sfa( log( output ) ~ log( capital ) + log( labour ),
+    data = front41Data, start = c( 1, 0, 0, 1, 0.999995 ) )
Warning messages:
1: In sfa(log(output) ~ log(capital) + log(labour), data = front41Data,  :
  the likelihood value of the ML estimation is less than that obtained using OLS; this indicates that the likelihood maximization did not converge to the global maximum or that there is no inefficiency (you could try again using different starting values)
2: In sfa(log(output) ~ log(capital) + log(labour), data = front41Data,  :
  the parameter 'gamma' is close to the boundary of the parameter space [0,1]: this can cause convergence problems and can negatively affect the validity and reliability of statistical tests and might be caused by model misspecification
> print( summary( a4 ), digits = 1 )
Error Components Frontier (see Battese & Coelli 1992)
Inefficiency decreases the endogenous variable (as in a production function)
The dependent variable is logged
Iterative ML estimation terminated after 10 iterations:
cannot find a parameter vector that results in a log-likelihood value
larger than the log-likelihood value obtained in the previous step

final maximum likelihood estimates
             Estimate Std. Error z value Pr(>|z|)    
(Intercept)    -6e+00      4e+00    -1.5      0.1    
log(capital)    7e-01      9e-01     0.7      0.5    
log(labour)     1e+00      9e-01     1.6      0.1    
sigmaSq         3e+01      3e+00    12.4   <2e-16 ***
gamma           1e-08      3e-06     0.0      1.0    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
log likelihood value: -162.91 

cross-sectional data
total number of observations = 60 

mean efficiency: 0.99954 
> 
> ## too many starting values 
> try( sfa( log( output) ~ log( capital ) + log( labour ), data = front41Data,
+    truncNorm = TRUE, startVal = c( 0.5, 0.3, 0.5, 0.5, 0.9, -1, 0.3 ) ) )
Error in sfa(log(output) ~ log(capital) + log(labour), data = front41Data,  : 
  wrong number of starting values (you provided 7 starting values but the model has 6 parameters)
> 
> ## too few starting values 
> try( sfa( log( output) ~ log( capital ) + log( labour ), data = front41Data,
+    truncNorm = TRUE, startVal = c( 0.5, 0.3, 0.5, 0.5, 0.9 ) ) )
Error in sfa(log(output) ~ log(capital) + log(labour), data = front41Data,  : 
  wrong number of starting values (you provided 5 starting values but the model has 6 parameters)
> 
> ## one explanatory variable specifiec twice (works)
> sfa( log( output) ~ log( capital ) + log( labour ) + log( capital ), 
+    data = front41Data )

Call:
sfa(formula = log(output) ~ log(capital) + log(labour) + log(capital),      data = front41Data)

Maximum likelihood estimates
 (Intercept)  log(capital)   log(labour)       sigmaSq         gamma  
       0.562         0.281         0.536         0.217         0.797  
> 
> ## perfect multicollinearity -> NAs in OLS coefficiencts
> front41Data$capital10 <- 10 * front41Data$capital
> try( sfa( log( output) ~ log( capital ) + log( labour ) + log( capital10 ), 
+    data = front41Data ) )
Error in sfa(log(output) ~ log(capital) + log(labour) + log(capital10),  : 
  at least one coefficient estimated by OLS is NA: log(capital10). This may have been caused by (nearly) perfect multicollinearity
> 
> 
> ## load data abour rice production in the Phillipines
> data( "riceProdPhil")
> 
> ## nobs > nn * nt 
> rd <- riceProdPhil
> rd <- rbind( rd, rd[ 11, ] )
> rd <- plm.data( rd, c( "FMERCODE", "YEARDUM" ) )
> try( sfa( log( PROD ) ~ log( AREA ) + log( LABOR ) + log( NPK ), data = rd ) )
Error in sfa(log(PROD) ~ log(AREA) + log(LABOR) + log(NPK), data = rd) : 
  more than one observation for firm '11' in period '1'
> 
> ## non-positive firm number (works now)
> rd <- riceProdPhil
> rd$FMERCODE <- rd$FMERCODE - 2
> rd <- plm.data( rd, c( "FMERCODE", "YEARDUM" ) )
> b1 <- sfa( log( PROD ) ~ log( AREA ) + log( LABOR ) + log( NPK ), data = rd )
> print( summary( b1 ), digits = 1 )
Error Components Frontier (see Battese & Coelli 1992)
Inefficiency decreases the endogenous variable (as in a production function)
The dependent variable is logged
Iterative ML estimation terminated after 11 iterations:
cannot find a parameter vector that results in a log-likelihood value
larger than the log-likelihood value obtained in the previous step

final maximum likelihood estimates
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)    -0.83       0.28      -3    0.003 ** 
log(AREA)       0.45       0.06       7    1e-12 ***
log(LABOR)      0.29       0.06       4    6e-06 ***
log(NPK)        0.23       0.04       6    3e-08 ***
sigmaSq         0.16       0.02       6    1e-10 ***
gamma           0.46       0.09       5    1e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
log likelihood value: -86.43 

panel data
number of cross-sections = 43 
number of time periods = 8 
total number of observations = 344 
thus there are 0 observations not in the panel

mean efficiency: 0.8188 
> round( efficiencies( b1 ), 2 )
   efficiency
-1       0.73
0        0.93
1        0.74
2        0.90
3        0.86
4        0.81
5        0.92
6        0.82
7        0.87
8        0.85
9        0.60
10       0.95
11       0.78
12       0.87
13       0.71
14       0.91
15       0.88
16       0.92
17       0.86
18       0.90
19       0.80
20       0.83
21       0.71
22       0.71
23       0.84
24       0.86
25       0.80
26       0.94
27       0.71
28       0.61
29       0.92
30       0.85
31       0.89
32       0.50
33       0.91
34       0.70
35       0.93
36       0.93
37       0.74
38       0.67
39       0.94
40       0.90
41       0.72
> 
> ## firm number > number of firms (works now)
> rd <- riceProdPhil
> rd$FMERCODE[ rd$FMERCODE == 9 ] <- 47
> rd <- plm.data( rd, c( "FMERCODE", "YEARDUM" ) )
> b2 <- sfa( log( PROD ) ~ log( AREA ) + log( LABOR ) + log( NPK ), data = rd )
> print( summary( b2 ), digits = 1 )
Error Components Frontier (see Battese & Coelli 1992)
Inefficiency decreases the endogenous variable (as in a production function)
The dependent variable is logged
Iterative ML estimation terminated after 11 iterations:
log likelihood values and parameters of two successive iterations
are within the tolerance limit

final maximum likelihood estimates
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)    -0.83       0.28      -3    0.003 ** 
log(AREA)       0.45       0.06       7    1e-12 ***
log(LABOR)      0.29       0.06       4    6e-06 ***
log(NPK)        0.23       0.04       6    3e-08 ***
sigmaSq         0.16       0.02       6    1e-10 ***
gamma           0.46       0.09       5    1e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
log likelihood value: -86.43 

panel data
number of cross-sections = 43 
number of time periods = 8 
total number of observations = 344 
thus there are 0 observations not in the panel

mean efficiency: 0.8188 
> round( efficiencies( b2 ), 2 )
   efficiency
1        0.73
2        0.93
3        0.74
4        0.90
5        0.86
6        0.81
7        0.92
8        0.82
10       0.85
11       0.60
12       0.95
13       0.78
14       0.87
15       0.71
16       0.91
17       0.88
18       0.92
19       0.86
20       0.90
21       0.80
22       0.83
23       0.71
24       0.71
25       0.84
26       0.86
27       0.80
28       0.94
29       0.71
30       0.61
31       0.92
32       0.85
33       0.89
34       0.50
35       0.91
36       0.70
37       0.93
38       0.93
39       0.74
40       0.67
41       0.94
42       0.90
43       0.72
47       0.87
> # now with NA
> rd <- riceProdPhil
> rd$PROD[ rd$FMERCODE == 22 ] <- NA
> rd <- plm.data( rd, c( "FMERCODE", "YEARDUM" ) )
> b2b <- sfa( log( PROD ) ~ log( AREA ) + log( LABOR ) + log( NPK ), data = rd )
> print( summary( b2b ), digits = 1 )
Error Components Frontier (see Battese & Coelli 1992)
Inefficiency decreases the endogenous variable (as in a production function)
The dependent variable is logged
Iterative ML estimation terminated after 11 iterations:
cannot find a parameter vector that results in a log-likelihood value
larger than the log-likelihood value obtained in the previous step

final maximum likelihood estimates
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)    -0.84       0.28      -3    0.003 ** 
log(AREA)       0.45       0.06       7    4e-12 ***
log(LABOR)      0.29       0.06       4    9e-06 ***
log(NPK)        0.23       0.04       6    2e-08 ***
sigmaSq         0.16       0.03       6    3e-10 ***
gamma           0.47       0.09       5    1e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
log likelihood value: -85.171 

panel data
number of cross-sections = 42 
number of time periods = 8 
total number of observations = 336 
thus there are 0 observations not in the panel

mean efficiency: 0.81653 
> round( efficiencies( b2b ), 2 )
   efficiency
1        0.73
2        0.93
3        0.73
4        0.90
5        0.86
6        0.81
7        0.92
8        0.81
9        0.87
10       0.85
11       0.60
12       0.95
13       0.78
14       0.87
15       0.71
16       0.90
17       0.88
18       0.92
19       0.86
20       0.90
21       0.80
23       0.70
24       0.71
25       0.83
26       0.85
27       0.80
28       0.94
29       0.71
30       0.61
31       0.91
32       0.84
33       0.89
34       0.50
35       0.91
36       0.69
37       0.92
38       0.93
39       0.74
40       0.67
41       0.94
42       0.90
43       0.72
> 
> ## non-positive period number (works now)
> rd <- riceProdPhil
> rd$YEARDUM <- rd$YEARDUM - 2
> rd <- plm.data( rd, c( "FMERCODE", "YEARDUM" ) )
> b3 <- sfa( log( PROD ) ~ log( AREA ) + log( LABOR ) + log( NPK ), data = rd )
> print( summary( b3 ), digits = 1 )
Error Components Frontier (see Battese & Coelli 1992)
Inefficiency decreases the endogenous variable (as in a production function)
The dependent variable is logged
Iterative ML estimation terminated after 11 iterations:
cannot find a parameter vector that results in a log-likelihood value
larger than the log-likelihood value obtained in the previous step

final maximum likelihood estimates
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)    -0.83       0.28      -3    0.003 ** 
log(AREA)       0.45       0.06       7    1e-12 ***
log(LABOR)      0.29       0.06       4    6e-06 ***
log(NPK)        0.23       0.04       6    3e-08 ***
sigmaSq         0.16       0.02       6    1e-10 ***
gamma           0.46       0.09       5    1e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
log likelihood value: -86.43 

panel data
number of cross-sections = 43 
number of time periods = 8 
total number of observations = 344 
thus there are 0 observations not in the panel

mean efficiency: 0.8188 
> 
> ## period number > number of periods (works now)
> rd <- riceProdPhil
> rd$YEARDUM[ rd$YEARDUM == 4 ] <- 10
> rd <- plm.data( rd, c( "FMERCODE", "YEARDUM" ) )
> b4 <- sfa( log( PROD ) ~ log( AREA ) + log( LABOR ) + log( NPK ), data = rd )
> print( summary( b4 ), digits = 1 )
Error Components Frontier (see Battese & Coelli 1992)
Inefficiency decreases the endogenous variable (as in a production function)
The dependent variable is logged
Iterative ML estimation terminated after 11 iterations:
log likelihood values and parameters of two successive iterations
are within the tolerance limit

final maximum likelihood estimates
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)    -0.83       0.28      -3    0.003 ** 
log(AREA)       0.45       0.06       7    1e-12 ***
log(LABOR)      0.29       0.06       4    6e-06 ***
log(NPK)        0.23       0.04       6    3e-08 ***
sigmaSq         0.16       0.02       6    1e-10 ***
gamma           0.46       0.09       5    1e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
log likelihood value: -86.43 

panel data
number of cross-sections = 43 
number of time periods = 8 
total number of observations = 344 
thus there are 0 observations not in the panel

mean efficiency: 0.8188 
> # now with NA
> rd <- riceProdPhil
> rd$AREA[ rd$YEARDUM == 4 ] <- NA
> rd <- plm.data( rd, c( "FMERCODE", "YEARDUM" ) )
> b4b <- sfa( log( PROD ) ~ log( AREA ) + log( LABOR ) + log( NPK ), data = rd )
> print( summary( b4b ), digits = 1 )
Error Components Frontier (see Battese & Coelli 1992)
Inefficiency decreases the endogenous variable (as in a production function)
The dependent variable is logged
Iterative ML estimation terminated after 11 iterations:
log likelihood values and parameters of two successive iterations
are within the tolerance limit

final maximum likelihood estimates
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)    -0.76       0.30      -2     0.01 *  
log(AREA)       0.48       0.07       7    1e-11 ***
log(LABOR)      0.25       0.07       4    4e-04 ***
log(NPK)        0.24       0.05       5    1e-07 ***
sigmaSq         0.16       0.03       6    6e-10 ***
gamma           0.47       0.09       5    1e-07 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
log likelihood value: -83.11 

panel data
number of cross-sections = 43 
number of time periods = 7 
total number of observations = 301 
thus there are 0 observations not in the panel

mean efficiency: 0.81406 
> 
> ## firm without valid observations (works now)
> rd <- riceProdPhil
> rd$PROD[ rd$FMERCODE == 12 ] <- NA
> rd <- plm.data( rd, c( "FMERCODE", "YEARDUM" ) )
> b5 <- sfa( log( PROD ) ~ log( AREA ) + log( LABOR ) + log( NPK ), data = rd )
> print( summary( b5 ), digits = 1 )
Error Components Frontier (see Battese & Coelli 1992)
Inefficiency decreases the endogenous variable (as in a production function)
The dependent variable is logged
Iterative ML estimation terminated after 11 iterations:
log likelihood values and parameters of two successive iterations
are within the tolerance limit

final maximum likelihood estimates
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)    -0.88       0.28      -3    0.002 ** 
log(AREA)       0.48       0.07       7    1e-12 ***
log(LABOR)      0.29       0.06       4    8e-06 ***
log(NPK)        0.23       0.04       6    3e-08 ***
sigmaSq         0.15       0.02       7    5e-11 ***
gamma           0.44       0.09       5    1e-06 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
log likelihood value: -84.079 

panel data
number of cross-sections = 42 
number of time periods = 8 
total number of observations = 336 
thus there are 0 observations not in the panel

mean efficiency: 0.82647 
> round( efficiencies( b5 ), 2 )
   efficiency
1        0.74
2        0.93
3        0.73
4        0.91
5        0.86
6        0.85
7        0.93
8        0.83
9        0.87
10       0.86
11       0.62
13       0.80
14       0.88
15       0.76
16       0.92
17       0.88
18       0.92
19       0.85
20       0.90
21       0.80
22       0.84
23       0.70
24       0.71
25       0.83
26       0.87
27       0.81
28       0.95
29       0.72
30       0.64
31       0.93
32       0.87
33       0.90
34       0.52
35       0.91
36       0.71
37       0.94
38       0.94
39       0.78
40       0.68
41       0.94
42       0.90
43       0.74
> 
> 
> proc.time()
   user  system elapsed 
  1.364   0.028   1.385 
