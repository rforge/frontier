
R version 3.6.3 RC (2020-02-21 r77847) -- "Holding the Windsock"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library( "frontier" )
Loading required package: micEcon

If you have questions, suggestions, or comments regarding one of the 'micEcon' packages, please use a forum or 'tracker' at micEcon's R-Forge site:
https://r-forge.r-project.org/projects/micecon/
Loading required package: lmtest
Loading required package: zoo

Attaching package: 'zoo'

The following objects are masked from 'package:base':

    as.Date, as.Date.numeric


Please cite the 'frontier' package as:
Tim Coelli and Arne Henningsen (2013). frontier: Stochastic Frontier Analysis. R package version 1.1. http://CRAN.R-Project.org/package=frontier.

If you have questions, suggestions, or comments regarding the 'frontier' package, please use a forum or 'tracker' at frontier's R-Forge site:
https://r-forge.r-project.org/projects/frontier/
> library( "plm" )
> options( digits = 5 )
> 
> ## example data included in FRONTIER 4.1 (cross-section data)
> data( front41Data )
> row.names( front41Data ) <- paste( "F", row.names( front41Data ), sep = "_" )
> front41Data$logOutput  <- log( front41Data$output )
> front41Data$logCapital <- log( front41Data$capital )
> front41Data$logLabour  <- log( front41Data$labour )
> front41Data$firmNo     <- c( 1:nrow( front41Data ) )
> front41Data$ones       <- 1
>    
> ## cross-section data, error components frontier
> a1 <- frontier( data = front41Data, "logOutput",
+    c( "logCapital", "logLabour" ) )
> round( cooks.distance( a1, progressBar = FALSE ), 3 )
 [1] 0.020 0.005 0.011 0.007 0.018 0.002 0.082 0.009 0.012 0.006 0.023 0.858
[13] 0.028 0.019 0.132 0.006 0.014 0.005 0.019 0.000 0.011 0.030 0.008 0.011
[25] 0.083 0.038 0.001 0.001 0.026 0.026 0.040 0.024 0.037 0.058 0.353 0.035
[37] 0.012 0.018 0.017 0.012 0.005 0.018 0.000 0.040 0.008 0.011 0.019 0.001
[49] 0.016 0.011 0.010 0.017 0.026 0.005 0.002 0.005 0.505 0.020 0.021 0.014
> 
> ## cross-section data, error components frontier, truncNorm, starting values
> a5 <- frontier( data = front41Data, "logOutput",
+    c( "logCapital", "logLabour" ), truncNorm = TRUE,
+    startVal = c( 0.5, 0.3, 0.5, 0.5, 0.9, -1 ) )
> round( cooks.distance( a5, progressBar = FALSE ), 3 )
 [1] 0.025 0.004 0.008 0.004 0.019 0.001 0.091 0.007 0.009 0.004 0.027 7.903
[13] 0.020 0.026 0.126 0.007 0.012 0.002 0.013 0.001 0.010 0.020 0.006 0.010
[25] 0.085 0.027 0.001 0.001 0.022 0.042 0.047 0.022 0.025 0.044 0.025 0.023
[37] 0.008 0.019 0.021 0.012 0.003 0.018 0.001 0.026 0.004 0.008 0.014 0.000
[49] 0.016 0.010 0.007 0.013 0.019 0.003 0.002 0.002 0.561 0.022 0.015 0.012
> 
> ## cross-section data, efficiency effects frontier, zIntercept, starting values
> aa5 <- frontier( data = front41Data, "logOutput",
+    c( "logCapital", "logLabour" ), zNames = "firmNo", zIntercept = TRUE,
+    startVal = c( 0.5, 0.3, 0.5, -0.4, -0.01 , 0.4, 0.9 ) )
> round( cooks.distance( aa5, progressBar = FALSE ), 3 )
 [1] 0.005 0.011 0.011 0.016 0.008 0.016 0.077 0.013 0.000 0.019 0.038 6.487
[13] 0.253 0.008 0.172 0.026 0.013 0.016 0.006 0.004 0.018 0.027 0.001 0.039
[25] 0.105 0.033 0.002 0.009 0.035 0.025 0.035 0.086 0.065 0.106 0.015 0.036
[37] 0.007 0.022 0.027 0.014 0.016 0.025 0.001 0.062 0.023 0.033 0.020 0.004
[49] 0.035 0.016 0.019 0.024 0.032 0.025 0.002 0.017 0.817 0.042 0.036 0.051
> 
> 
> ## cross-section data with NAs and infinit values
> naData <- front41Data
> naData$output[3] <- NA
> naData$capital[5] <- 0
> naData$labour[9] <- 0
> naData$firmNo[14] <- NA
> 
> ## cross-section data with NAs, error components frontier
> San1 <- sfa( log( output ) ~ log( capital ) + log( labour ), data = naData )
> round( cooks.distance( San1, progressBar = FALSE ), 3 )
 [1] 0.020 0.004 0.008 0.002 0.075 0.010 0.006 0.022 0.789 0.026 0.018 0.143
[13] 0.007 0.015 0.005 0.019 0.000 0.012 0.031 0.008 0.009 0.076 0.040 0.000
[25] 0.001 0.027 0.026 0.038 0.020 0.038 0.052 0.308 0.037 0.010 0.019 0.017
[37] 0.011 0.006 0.018 0.000 0.041 0.009 0.012 0.018 0.001 0.016 0.011 0.010
[49] 0.016 0.025 0.006 0.002 0.005 0.489 0.020 0.020 0.014
> 
> ## cross-section data with NAs, efficiency effects frontier
> Saan1 <- sfa( log( output ) ~ log( capital ) + log( labour ) | firmNo - 1,
+    data = naData )
> round( cooks.distance( Saan1, progressBar = FALSE ), 3 )
 [1] 0.018 0.022 0.001 0.000 0.053 0.004 0.002 0.028 0.918 0.025 0.145 0.009
[13] 0.012 0.003 0.019 0.001 0.010 0.028 0.007 0.012 0.084 0.036 0.000 0.001
[25] 0.020 0.026 0.035 0.037 0.028 0.064 0.322 0.027 0.006 0.019 0.015 0.006
[37] 0.009 0.019 0.000 0.030 0.011 0.014 0.009 0.004 0.014 0.018 0.003 0.007
[49] 0.013 0.010 0.001 0.010 0.500 0.020 0.008 0.017
> 
> 
> ## data set of rice producers in the Philippines
> data( riceProdPhil )
> riceProdPhil$lPROD  <- log( riceProdPhil$PROD )
> riceProdPhil$lAREA  <- log( riceProdPhil$AREA )
> riceProdPhil$lLABOR <- log( riceProdPhil$LABOR )
> riceProdPhil$lNPK   <- log( riceProdPhil$NPK )
> riceProdPhil$ones   <- 1
> 
> ## cross-section rice data, error components frontier
> bb1 <- frontier( data = riceProdPhil,
+    yName = "lPROD", xNames = c( "lAREA", "lLABOR", "lNPK" ) )
> round( cooks.distance( bb1, progressBar = FALSE ), 3 )
  [1] 0.001 0.001 0.000 0.001 0.000 0.003 0.000 0.000 0.000 0.001 0.003 0.005
 [13] 0.000 0.001 0.003 0.001 0.001 0.001 0.001 0.000 0.002 0.001 0.001 0.001
 [25] 0.001 0.001 0.001 0.000 0.002 0.014 0.011 0.005 0.001 0.015 0.001 0.010
 [37] 0.003 0.004 0.002 0.001 0.000 0.020 0.005 0.001 0.000 0.002 0.002 0.000
 [49] 0.005 0.002 0.000 0.000 0.001 0.008 0.001 0.001 0.001 0.003 0.001 0.010
 [61] 0.000 0.005 0.000 0.001 0.001 0.001 0.002 0.000 0.001 0.000 0.002 0.005
 [73] 0.003 0.002 0.001 0.001 0.022 0.002 0.001 0.002 0.000 0.003 0.000 0.005
 [85] 0.004 0.008 0.001 0.000 0.001 0.024 0.000 0.001 0.000 0.001 0.000 0.000
 [97] 0.002 0.002 0.000 0.001 0.003 0.001 0.000 0.001 0.000 0.000 0.004 0.002
[109] 0.000 0.000 0.000 0.000 0.000 0.003 0.003 0.005 0.006 0.003 0.001 0.007
[121] 0.001 0.001 0.009 0.001 0.004 0.001 0.004 0.002 0.001 0.001 0.004 0.001
[133] 0.002 0.000 0.003 0.003 0.000 0.001 0.001 0.002 0.054 0.002 0.000 0.001
[145] 0.000 0.005 0.000 0.002 0.000 0.004 0.004 0.003 0.000 0.001 0.001 0.002
[157] 0.000 0.003 0.001 0.002 0.000 0.000 0.006 0.000 0.001 0.004 0.004 0.000
[169] 0.001 0.008 0.000 0.003 0.001 0.003 0.001 0.000 0.001 0.002 0.000 0.000
[181] 0.000 0.001 0.005 0.004 0.001 0.000 0.002 0.003 0.013 0.000 0.000 0.000
[193] 0.001 0.001 0.001 0.001 0.002 0.000 0.002 0.000 0.002 0.002 0.004 0.001
[205] 0.003 0.032 0.001 0.001 0.000 0.001 0.010 0.001 0.003 0.002 0.000 0.000
[217] 0.005 0.000 0.001 0.000 0.000 0.001 0.002 0.001 0.001 0.001 0.029 0.001
[229] 0.000 0.001 0.009 0.007 0.000 0.001 0.000 0.003 0.002 0.001 0.001 0.001
[241] 0.000 0.000 0.000 0.042 0.003 0.008 0.003 0.000 0.001 0.001 0.001 0.000
[253] 0.003 0.001 0.002 0.074 0.001 0.003 0.003 0.001 0.002 0.001 0.001 0.006
[265] 0.001 0.003 0.000 0.001 0.001 0.009 0.001 0.002 0.008 0.017 0.004 0.000
[277] 0.010 0.001 0.001 0.002 0.007 0.000 0.001 0.001 0.001 0.000 0.001 0.003
[289] 0.003 0.003 0.003 0.001 0.000 0.001 0.002 0.000 0.003 0.000 0.001 0.002
[301] 0.001 0.000 0.019 0.000 0.001 0.001 0.002 0.002 0.000 0.003 0.001 0.001
[313] 0.033 0.000 0.000 0.004 0.008 0.002 0.007 0.015 0.001 0.000 0.001 0.000
[325] 0.002 0.008 0.002 0.001 0.003 0.000 0.138 0.072 0.058 0.007 0.008 0.002
[337] 0.001 0.000 0.032 0.003 0.000 0.019 0.001 0.007
> 
> ## cross-section rice data, error components frontier, truncNorm, starting values
> bb7 <- frontier( data = riceProdPhil,
+    yName = "lPROD", xNames = c( "lAREA", "lLABOR", "lNPK" ),
+    truncNorm = TRUE,
+    startVal = c( -1, 0.3, 0.3, 0.3, 0.2, 0.9, -0.01 ) )
> round( cooks.distance( bb7, progressBar = FALSE ), 3 )
  [1] 0.000 0.001 0.000 0.002 0.000 0.006 0.002 0.000 0.001 0.000 0.005 0.011
 [13] 0.000 0.000 0.007 0.001 0.012 0.004 0.004 0.000 0.003 0.003 0.002 0.001
 [25] 0.001 0.003 0.002 0.002 0.001 0.018 0.012 0.006 0.000 0.010 0.002 0.021
 [37] 0.011 0.001 0.002 0.001 0.000 0.042 0.003 0.001 0.000 0.004 0.005 0.002
 [49] 0.011 0.004 0.000 0.002 0.001 0.016 0.001 0.001 0.003 0.007 0.004 0.034
 [61] 0.000 0.009 0.001 0.002 0.000 0.004 0.004 0.000 0.010 0.000 0.013 0.007
 [73] 0.008 0.001 0.003 0.000 0.012 0.004 0.001 0.004 0.000 0.003 0.001 0.007
 [85] 0.005 0.026 0.000 0.000 0.001 0.030 0.000 0.001 0.006 0.001 0.000 0.001
 [97] 0.001 0.004 0.000 0.001 0.004 0.004 0.000 0.001 0.000 0.003 0.005 0.004
[109] 0.000 0.002 0.001 0.000 0.000 0.003 0.005 0.013 0.012 0.005 0.002 0.006
[121] 0.003 0.001 0.017 0.002 0.011 0.001 0.007 0.003 0.001 0.001 0.007 0.002
[133] 0.004 0.001 0.002 0.009 0.000 0.001 0.002 0.002 0.085 0.003 0.000 0.003
[145] 0.001 0.007 0.000 0.010 0.000 0.004 0.008 0.006 0.000 0.003 0.002 0.004
[157] 0.000 0.007 0.001 0.004 0.001 0.000 0.015 0.000 0.002 0.012 0.006 0.000
[169] 0.001 0.014 0.000 0.004 0.001 0.008 0.002 0.002 0.004 0.002 0.000 0.000
[181] 0.000 0.001 0.004 0.006 0.004 0.000 0.001 0.006 0.014 0.000 0.000 0.000
[193] 0.001 0.002 0.002 0.004 0.007 0.001 0.005 0.001 0.020 0.002 0.005 0.002
[205] 0.006 0.018 0.002 0.010 0.000 0.001 0.014 0.001 0.008 0.006 0.000 0.003
[217] 0.010 0.000 0.002 0.000 0.000 0.000 0.004 0.001 0.003 0.001 0.041 0.002
[229] 0.000 0.002 0.014 0.008 0.000 0.003 0.000 0.007 0.004 0.000 0.002 0.002
[241] 0.000 0.000 0.000 0.070 0.011 0.018 0.004 0.002 0.001 0.001 0.003 0.000
[253] 0.005 0.004 0.003 0.056 0.001 0.005 0.009 0.001 0.006 0.001 0.001 0.003
[265] 0.003 0.004 0.000 0.001 0.005 0.015 0.004 0.004 0.008 0.023 0.006 0.000
[277] 0.019 0.000 0.003 0.002 0.013 0.002 0.003 0.004 0.003 0.001 0.001 0.002
[289] 0.003 0.005 0.005 0.001 0.000 0.000 0.002 0.000 0.002 0.002 0.000 0.004
[301] 0.002 0.001 0.019 0.001 0.000 0.002 0.004 0.004 0.000 0.011 0.002 0.004
[313] 0.029 0.000 0.000 0.006 0.013 0.002 0.009 0.020 0.001 0.000 0.003 0.000
[325] 0.016 0.008 0.003 0.005 0.005 0.005 0.003 0.076 0.065 0.010 0.008 0.005
[337] 0.009 0.000 0.035 0.004 0.000 0.024 0.007 0.006
> 
> 
> ## Cost Frontier (with land as quasi-fixed input)
> riceProdPhil$cost <- riceProdPhil$LABOR * riceProdPhil$LABORP +
+    riceProdPhil$NPK * riceProdPhil$NPKP
> riceProdPhil$lCost   <- log( riceProdPhil$cost )
> riceProdPhil$lLABORP <- log( riceProdPhil$LABORP )
> riceProdPhil$lNPKP   <- log( riceProdPhil$NPKP )
> 
> ## cross-section rice data, error components cost frontier
> dd1 <- frontier( "lCost", xNames = c( "lPROD", "lAREA", "lLABORP", "lNPKP" ),
+    data = riceProdPhil, ineffDecrease = FALSE )
> round( cooks.distance( dd1, progressBar = FALSE ), 3 )
  [1]  0.004  0.003  0.000  0.010  0.009  0.007  0.002  0.000  0.000  0.000
 [11]  0.058  0.007  0.000  0.003  0.018  0.027  0.003  0.000  0.001  0.002
 [21]  0.001  0.002  0.001  0.001  0.000  0.003  0.017  0.002  0.001  0.647
 [31]  0.006  0.022  0.000  0.188  0.000  0.014  0.002  0.004  0.014  0.012
 [41]  0.000  0.041  0.047  0.005  0.004  0.000  0.007  0.003  0.052  0.000
 [51]  0.002  0.001  0.001  0.010  0.017  0.010  0.010  0.001  0.001  0.013
 [61]  0.000  0.001  0.000  0.026  0.000  0.001  0.001  0.001  0.006  0.014
 [71]  0.012  0.037  0.020  0.001  0.016  0.008  0.375  0.002  0.014  0.004
 [81]  0.003  0.038  0.019  0.003  0.002  0.044  0.004  0.000  0.000  0.005
 [91]  0.001  0.013  0.000  0.010  0.000  0.001  0.007  0.012  0.004  0.011
[101]  0.020  0.000  0.002  0.001  0.000  0.000  0.002  0.001  0.003  0.000
[111]  0.001  0.005  0.001  0.001  0.022  0.015  0.001  0.010  0.008  0.086
[121]  0.000  0.000  0.002  0.001  0.017  0.005  0.006  0.005  0.005  0.005
[131]  0.001  0.001  0.000  0.000  0.013  0.000  0.003  0.004  0.001  0.016
[141]  0.008  0.005  0.000  0.001  0.012  0.001  0.001  0.015  0.001  0.001
[151]  0.006  0.008  0.005  0.000  0.009  0.007  0.003  0.003  0.004  0.006
[161]  0.004  0.009  0.007  0.002  0.005  0.025  0.005  0.000  0.009  0.006
[171]  0.024  0.018  0.003  0.001  0.013  0.001  0.001  0.002  0.002  0.003
[181]  0.000  0.013  0.053  0.025  0.003  0.001  0.003  0.008  0.000  0.001
[191]  0.000  0.000  0.006  0.013  0.001  0.022  0.005  0.000  0.012  0.002
[201]  0.002  0.003  0.010  0.004  0.008  0.241  0.001  0.010  0.002  0.000
[211]  0.007  0.002  0.034  0.004  0.000  0.001  0.003  0.004  0.002  0.007
[221]  0.016  0.000  0.005  0.000  0.002  0.012  0.015  0.001  0.005  0.026
[231]  0.008  0.000  0.000  0.002  0.001  0.019  0.011  0.000  0.000  0.006
[241]  0.005  0.003  0.000 32.205  0.033  0.008  0.022  0.007  0.029  0.000
[251]  0.011  0.004  0.007  0.022  0.007  0.139  0.000  0.001  0.020  0.000
[261]  0.020  0.000  0.000  0.008  0.002  0.003  0.005  0.003  0.015  0.013
[271]  0.000  0.003  0.089  0.023  0.019  0.002  0.028  0.004  0.002  0.005
[281]  0.051  0.006  0.001  0.000  0.017  0.010  0.017  0.033  0.000  0.010
[291]  0.006  0.011  0.003  0.005  0.001  0.000  0.029  0.021  0.023  0.002
[301]  0.075  0.002  0.007  0.001  0.000  0.001  0.013  0.000  0.003  0.006
[311]  0.002  0.003  0.107  0.002  0.000  0.045  0.003  0.000  0.000  0.000
[321]  0.001  0.004  0.002  0.003  0.009  0.002  0.000  0.000  0.008  0.009
[331]  0.308  0.108  0.002  0.001  0.015  0.000  0.003  0.002  0.007  0.030
[341]  0.003  0.007  0.007  0.002
> 
> 
> ## panel data
> riceProdPhil$farm <- paste( "F_", ifelse( riceProdPhil$FMERCODE > 9, "", "0" ),
+    riceProdPhil$FMERCODE, sep = "" )
> riceProdPhil$year <- riceProdPhil$YEARDUM + 1998
> riceProdPhilPanel <- pdata.frame( riceProdPhil, c( "farm", "year" ),
+    row.names = FALSE )
> riceProdPhilPanel$ones <- 1
> 
> ## panel data, error components frontier
> b1 <- frontier( data = riceProdPhilPanel,
+    yName = "lPROD", xNames = c( "lAREA", "lLABOR", "lNPK" ) )
> round( cooks.distance( b1, progressBar = FALSE ), 3 )
  [1] 0.000 0.000 0.000 0.000 0.000 0.001 0.003 0.001 0.003 0.000 0.000 0.005
 [13] 0.004 0.006 0.002 0.021 0.000 0.000 0.000 0.000 0.002 0.003 0.003 0.000
 [25] 0.001 0.009 0.022 0.001 0.000 0.001 0.001 0.000 0.000 0.000 0.000 0.000
 [37] 0.001 0.000 0.000 0.001 0.003 0.002 0.000 0.000 0.000 0.000 0.006 0.000
 [49] 0.001 0.002 0.001 0.003 0.000 0.001 0.005 0.002 0.000 0.000 0.000 0.000
 [61] 0.000 0.001 0.004 0.000 0.000 0.000 0.000 0.000 0.000 0.002 0.000 0.002
 [73] 0.000 0.001 0.000 0.000 0.004 0.000 0.000 0.001 0.012 0.025 0.000 0.002
 [85] 0.001 0.003 0.002 0.003 0.007 0.001 0.001 0.059 0.013 0.030 0.009 0.031
 [97] 0.000 0.000 0.000 0.001 0.002 0.000 0.000 0.000 0.000 0.003 0.001 0.000
[109] 0.000 0.000 0.001 0.000 0.000 0.000 0.000 0.001 0.001 0.000 0.013 0.000
[121] 0.037 0.001 0.000 0.000 0.002 0.005 0.008 0.004 0.003 0.057 0.000 0.002
[133] 0.002 0.003 0.015 0.002 0.001 0.000 0.001 0.000 0.000 0.000 0.001 0.007
[145] 0.001 0.002 0.000 0.020 0.000 0.000 0.030 0.005 0.000 0.000 0.001 0.000
[157] 0.000 0.000 0.001 0.001 0.001 0.005 0.001 0.011 0.000 0.005 0.000 0.000
[169] 0.000 0.000 0.001 0.002 0.001 0.001 0.001 0.000 0.000 0.000 0.000 0.002
[181] 0.000 0.001 0.011 0.002 0.000 0.000 0.003 0.002 0.001 0.001 0.000 0.006
[193] 0.000 0.000 0.000 0.000 0.007 0.003 0.000 0.002 0.000 0.004 0.000 0.001
[205] 0.000 0.000 0.000 0.001 0.002 0.000 0.001 0.000 0.001 0.001 0.001 0.002
[217] 0.001 0.004 0.004 0.000 0.000 0.000 0.001 0.004 0.000 0.002 0.000 0.004
[229] 0.001 0.173 0.000 0.005 0.000 0.003 0.001 0.008 0.003 0.001 0.000 0.302
[241] 0.013 0.012 0.004 0.003 0.002 0.005 0.122 0.046 0.052 0.000 0.001 0.001
[253] 0.000 0.009 0.001 0.003 0.000 0.000 0.000 0.000 0.002 0.001 0.020 0.004
[265] 0.008 0.012 0.000 0.030 0.019 0.003 0.000 0.001 0.001 0.002 0.001 0.000
[277] 0.007 0.001 0.000 0.002 0.020 0.000 0.000 0.000 0.000 0.000 0.000 0.005
[289] 0.003 0.002 0.007 0.005 0.000 0.000 0.014 0.000 0.005 0.000 0.001 0.002
[301] 0.022 0.005 0.000 0.044 0.002 0.004 0.000 0.001 0.005 0.005 0.003 0.000
[313] 0.001 0.001 0.000 0.000 0.000 0.000 0.001 0.004 0.000 0.005 0.004 0.003
[325] 0.028 0.035 0.006 0.022 0.009 0.002 0.001 0.001 0.006 0.001 0.005 0.001
[337] 0.005 0.010 0.000 0.000 0.001 0.012 0.002 0.004
> 
> 
> ## unbalanced panel data
> set.seed( 321 )
> riceProdPhilPanelUnb <- riceProdPhilPanel
> riceProdPhilPanelUnb[ 3, c( "PROD", "lPROD" ) ] <- NA
> riceProdPhilPanelUnb[ 5, c( "AREA", "lAREA" ) ] <- NA
> riceProdPhilPanelUnb[ 111, c( "LABOR", "lLABOR", "LABORP", "lLABORP" ) ] <- NA
> riceProdPhilPanelUnb[ 222, c( "NPK", "lNPK", "NPKP", "lNPKP" ) ] <- NA
> 
> ## unbalanced panel data, error components frontier, truncNorm, timeEffect
> b4u <- sfa( lPROD ~ lAREA + lLABOR + lNPK, data = riceProdPhilPanelUnb,
+    truncNorm = TRUE, timeEffect = TRUE )
> round( cooks.distance( b4u, progressBar = FALSE ), 3 )
  [1] 0.001 0.000 0.000 0.010 0.013 0.004 0.007 0.000 0.000 0.012 0.012 0.011
 [13] 0.004 0.034 0.001 0.000 0.000 0.002 0.010 0.005 0.013 0.002 0.000 0.013
 [25] 0.015 0.001 0.000 0.002 0.002 0.001 0.000 0.000 0.000 0.000 0.001 0.000
 [37] 0.000 0.000 0.008 0.003 0.001 0.001 0.000 0.000 0.007 0.000 0.002 0.006
 [49] 0.003 0.008 0.000 0.003 0.013 0.007 0.003 0.001 0.000 0.000 0.000 0.001
 [61] 0.005 0.000 0.000 0.000 0.000 0.000 0.000 0.003 0.000 0.001 0.000 0.000
 [73] 0.000 0.000 0.005 0.000 0.001 0.001 0.011 0.015 0.001 0.004 0.002 0.001
 [85] 0.004 0.001 0.012 0.001 0.000 0.082 0.014 0.033 0.014 0.051 0.001 0.002
 [97] 0.000 0.002 0.005 0.000 0.000 0.001 0.000 0.001 0.000 0.000 0.000 0.000
[109] 0.000 0.001 0.000 0.002 0.002 0.001 0.001 0.036 0.005 0.040 0.001 0.000
[121] 0.000 0.002 0.004 0.006 0.004 0.002 0.094 0.000 0.001 0.002 0.005 0.024
[133] 0.002 0.003 0.000 0.002 0.001 0.000 0.000 0.002 0.017 0.001 0.003 0.001
[145] 0.033 0.000 0.000 0.075 0.005 0.000 0.001 0.001 0.000 0.000 0.001 0.004
[157] 0.002 0.002 0.009 0.002 0.008 0.000 0.007 0.001 0.000 0.004 0.000 0.004
[169] 0.007 0.000 0.001 0.001 0.000 0.003 0.000 0.001 0.006 0.000 0.001 0.017
[181] 0.001 0.001 0.000 0.011 0.003 0.025 0.000 0.009 0.020 0.000 0.001 0.001
[193] 0.001 0.009 0.003 0.001 0.003 0.000 0.003 0.000 0.001 0.000 0.000 0.000
[205] 0.001 0.003 0.000 0.002 0.000 0.002 0.001 0.002 0.003 0.003 0.011 0.010
[217] 0.000 0.001 0.002 0.009 0.000 0.003 0.000 0.009 0.006 0.210 0.001 0.004
[229] 0.002 0.005 0.001 0.009 0.003 0.001 0.001 0.502 0.009 0.018 0.004 0.005
[241] 0.002 0.007 0.184 0.055 0.034 0.000 0.001 0.002 0.000 0.009 0.001 0.018
[253] 0.000 0.000 0.000 0.000 0.002 0.001 0.024 0.004 0.076 0.066 0.002 0.033
[265] 0.033 0.001 0.000 0.000 0.002 0.002 0.001 0.000 0.019 0.003 0.000 0.005
[277] 0.021 0.000 0.000 0.000 0.000 0.000 0.002 0.004 0.009 0.007 0.018 0.014
[289] 0.001 0.000 0.028 0.001 0.009 0.000 0.003 0.002 0.055 0.008 0.000 0.058
[301] 0.004 0.006 0.000 0.001 0.010 0.007 0.004 0.000 0.001 0.001 0.000 0.000
[313] 0.000 0.000 0.003 0.003 0.000 0.006 0.006 0.002 0.044 0.034 0.012 0.031
[325] 0.006 0.001 0.001 0.002 0.011 0.002 0.012 0.001 0.012 0.021 0.000 0.000
[337] 0.000 0.006 0.002 0.003
> 
> 
> ## unbalanced panel data with firms that have NAs in all time periods
> naPanelData <- riceProdPhilPanelUnb
> naPanelData[ naPanelData$farm == "F_21", "PROD" ] <- NA
> naPanelData[ naPanelData$farm == "F_23", "AREA" ] <- NA
> naPanelData[ naPanelData$farm == "F_26", "LABOR" ] <- NA
> naPanelData[ naPanelData$farm == "F_30", "NPK" ] <- NA
> naPanelData[ naPanelData$farm == "F_35", "EDYRS" ] <- NA
> 
> ## panel data with NA firms, efficiency effects frontier
> b5n <- sfa( log( PROD ) ~ log( AREA ) + log( LABOR ) + log( NPK ) |
+    EDYRS + BANRAT - 1, data = naPanelData )
> round( cooks.distance( b5n, progressBar = FALSE ), 3 )
  [1] 0.002 0.003 0.004 0.004 0.019 0.000 0.002 0.000 0.000 0.006 0.005 0.007
 [13] 0.001 0.018 0.001 0.004 0.002 0.001 0.004 0.000 0.017 0.000 0.002 0.003
 [25] 0.021 0.004 0.001 0.001 0.001 0.002 0.000 0.001 0.000 0.000 0.003 0.000
 [37] 0.001 0.002 0.003 0.014 0.002 0.006 0.004 0.001 0.011 0.005 0.001 0.003
 [49] 0.001 0.003 0.000 0.002 0.003 0.003 0.000 0.000 0.003 0.000 0.001 0.005
 [61] 0.004 0.000 0.001 0.000 0.000 0.001 0.001 0.004 0.002 0.002 0.002 0.003
 [73] 0.001 0.002 0.001 0.002 0.003 0.002 0.003 0.004 0.001 0.000 0.002 0.000
 [85] 0.001 0.000 0.012 0.000 0.000 0.054 0.003 0.030 0.020 0.039 0.000 0.003
 [97] 0.001 0.006 0.003 0.004 0.005 0.000 0.002 0.004 0.003 0.000 0.000 0.001
[109] 0.000 0.009 0.009 0.007 0.002 0.003 0.003 0.012 0.007 0.001 0.002 0.002
[121] 0.000 0.004 0.010 0.015 0.008 0.003 0.019 0.000 0.007 0.012 0.010 0.007
[133] 0.004 0.003 0.000 0.002 0.000 0.000 0.000 0.000 0.009 0.001 0.004 0.000
[145] 0.011 0.000 0.001 0.024 0.012 0.000 0.001 0.001 0.000 0.000 0.001 0.002
[157] 0.002 0.002 0.002 0.003 0.006 0.001 0.003 0.003 0.002 0.000 0.001 0.004
[169] 0.001 0.001 0.001 0.000 0.002 0.003 0.000 0.000 0.001 0.010 0.002 0.003
[181] 0.005 0.001 0.001 0.000 0.003 0.003 0.000 0.002 0.003 0.001 0.005 0.005
[193] 0.000 0.001 0.002 0.007 0.001 0.004 0.003 0.006 0.001 0.011 0.002 0.002
[205] 0.007 0.005 0.007 0.005 0.004 0.010 0.005 0.059 0.012 0.003 0.002 0.001
[217] 0.003 0.006 0.006 0.091 0.001 0.001 0.001 0.000 0.004 0.001 0.008 0.008
[229] 0.008 0.012 0.006 0.008 0.021 0.002 0.001 0.007 0.004 0.002 0.002 0.001
[241] 0.001 0.001 0.001 0.004 0.005 0.004 0.011 0.007 0.001 0.000 0.007 0.000
[253] 0.004 0.000 0.000 0.003 0.001 0.004 0.000 0.025 0.003 0.008 0.012 0.001
[265] 0.011 0.002 0.006 0.009 0.001 0.000 0.003 0.003 0.003 0.005 0.001 0.000
[277] 0.000 0.006 0.005 0.008 0.009 0.062 0.002 0.016 0.015 0.003 0.002 0.002
[289] 0.005 0.002 0.005 0.001 0.001 0.002 0.002 0.005 0.000 0.004 0.002 0.008
> 
> proc.time()
   user  system elapsed 
 58.094   0.051  58.147 
