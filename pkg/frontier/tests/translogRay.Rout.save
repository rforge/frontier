
R version 4.0.2 (2020-06-22) -- "Taking Off Again"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library( frontier )
Loading required package: micEcon

If you have questions, suggestions, or comments regarding one of the 'micEcon' packages, please use a forum or 'tracker' at micEcon's R-Forge site:
https://r-forge.r-project.org/projects/micecon/
Loading required package: lmtest
Loading required package: zoo

Attaching package: 'zoo'

The following objects are masked from 'package:base':

    as.Date, as.Date.numeric


Please cite the 'frontier' package as:
Tim Coelli and Arne Henningsen (2013). frontier: Stochastic Frontier Analysis. R package version 1.1. http://CRAN.R-Project.org/package=frontier.

If you have questions, suggestions, or comments regarding the 'frontier' package, please use a forum or 'tracker' at frontier's R-Forge site:
https://r-forge.r-project.org/projects/frontier/
> options( digits = 5 )
> 
> printAll <- function( x ) {
+    for( n in names( x ) ) {
+       cat( "$", n, "\n", sep = "" )
+       if( n %in% c( "olsParam", "gridParam", "mleParam", "olsStdEr", "mleCov" ) ) {
+          print( round( x[[ n ]], 2 ) )
+       } else if( n %in% c( "fitted", "resid", "olsResid" ) ) {
+          print( round( x[[ n ]], 3 ) )
+       } else {
+          print( x[[ n ]] )
+       }
+       cat( "\n" )
+    }
+    cat( "class\n" )
+    print( class( x ) )
+ }
> 
> ## preparing data
> data( germanFarms )
> # quantity of crop outputs
> germanFarms$qCrop <- germanFarms$vCrop / germanFarms$pOutput
> # quantity of animal outputs
> germanFarms$qAnimal <- germanFarms$vAnimal / germanFarms$pOutput
> # quantity of variable inputs
> germanFarms$qVarInput <- germanFarms$vVarInput / germanFarms$pVarInput
> # a time trend to account for technical progress:
> germanFarms$time <- c(1:20)
> 
> # estimate a translog ray production function
> estResultRay <- frontierTranslogRay( yNames = c( "qCrop", "qAnimal" ),
+    xNames = c( "qLabor", "land", "qVarInput" ),
+    data = germanFarms )
restarting with starting values multiplied by
[1] 0.999
Warning messages:
1: In sfa(formula = sfaFormula, data = data, ...) :
  the residuals of the OLS estimates are right-skewed and the likelihood value of the ML estimation is less than that obtained using OLS; this usually indicates that there is no inefficiency or that the model is misspecified
2: In sfa(formula = sfaFormula, data = data, ...) :
  the parameter 'gamma' is close to the boundary of the parameter space [0,1]: this can cause convergence problems and can negatively affect the validity and reliability of statistical tests and might be caused by model misspecification
> print( estResultRay )

Call:
frontierTranslogRay(yNames = c("qCrop", "qAnimal"), xNames = c("qLabor",      "land", "qVarInput"), data = germanFarms)

Maximum likelihood estimates
      a_0        a_1        a_2        a_3       a_t1      b_1_1      b_1_2  
-1.14e+02  -6.04e+01   8.79e+01  -7.04e+01   3.31e+02  -2.53e+01   1.21e+01  
    b_1_3     b_1_t1      b_2_2      b_2_3     b_2_t1      b_3_3     b_3_t1  
-1.77e+01   1.14e+02  -6.71e+00  -3.63e+00  -3.57e+01   1.66e+01  -1.36e+01  
  b_t1_t1    sigmaSq      gamma  
-1.34e+02   9.31e-05   3.05e-03  
> print( summary( estResultRay ), digits = 1 )
Error Components Frontier (see Battese & Coelli 1992)
Inefficiency decreases the endogenous variable (as in a production function)
The dependent variable is logged
Iterative ML estimation terminated after 21 iterations:
log likelihood values and parameters of two successive iterations
are within the tolerance limit
Multiplied the initial values 1 time(s) by 0.999 before the search procedure could start
You could try to use different starting values or try to reduce the step size specified in argument 'searchStep'

final maximum likelihood estimates
        Estimate Std. Error z value Pr(>|z|)    
a_0       -1e+02      1e+00    -117   <2e-16 ***
a_1       -6e+01      1e+00     -59   <2e-16 ***
a_2        9e+01      9e-01      99   <2e-16 ***
a_3       -7e+01      5e-01    -129   <2e-16 ***
a_t1       3e+02      1e+00     293   <2e-16 ***
b_1_1     -3e+01      1e+00     -23   <2e-16 ***
b_1_2      1e+01      1e+00      11   <2e-16 ***
b_1_3     -2e+01      6e-01     -29   <2e-16 ***
b_1_t1     1e+02      1e+00     114   <2e-16 ***
b_2_2     -7e+00      9e-01      -8    1e-14 ***
b_2_3     -4e+00      5e-01      -8    4e-14 ***
b_2_t1    -4e+01      9e-01     -41   <2e-16 ***
b_3_3      2e+01      3e-01      53   <2e-16 ***
b_3_t1    -1e+01      5e-01     -26   <2e-16 ***
b_t1_t1   -1e+02      1e+00    -122   <2e-16 ***
sigmaSq    9e-05      3e-05       3    0.003 ** 
gamma      3e-03      2e-01       0    0.988    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
log likelihood value: 64.458 

cross-sectional data
total number of observations = 20 

mean efficiency: 0.99957 
> lrtest( estResultRay )
Likelihood ratio test

Model 1: OLS (no inefficiency)
Model 2: Error Components Frontier (ECF)
  #Df LogLik Df Chisq Pr(>Chisq)
1  16   64.5                    
2  17   64.5  1     0          1
> round( efficiencies( estResultRay ), 3 )
   efficiency
1           1
2           1
3           1
4           1
5           1
6           1
7           1
8           1
9           1
10          1
11          1
12          1
13          1
14          1
15          1
16          1
17          1
18          1
19          1
20          1
> round( efficiencies( estResultRay, asInData = TRUE ), 3 )
 1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 
 1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1 
> round( residuals( estResultRay ), 3 )
   residuals
1      0.001
2     -0.001
3     -0.010
4      0.004
5     -0.002
6     -0.020
7      0.006
8      0.023
9      0.012
10    -0.004
11    -0.010
12     0.003
13    -0.007
14     0.007
15     0.004
16    -0.011
17    -0.003
18    -0.005
19     0.013
20    -0.007
> round( residuals( estResultRay, asInData = TRUE ), 3 )
     1      2      3      4      5      6      7      8      9     10     11 
 0.001 -0.001 -0.010  0.004 -0.002 -0.020  0.006  0.023  0.012 -0.004 -0.010 
    12     13     14     15     16     17     18     19     20 
 0.003 -0.007  0.007  0.004 -0.011 -0.003 -0.005  0.013 -0.007 
> printAll( estResultRay )
$modelType
[1] 1

$ineffDecrease
[1] TRUE

$nn
[1] 20

$nt
[1] 1

$nob
[1] 20

$nb
[1] 15

$printIter
[1] 0

$tol
[1] 1e-05

$searchTol
[1] 0.001

$bignum
[1] 1e+16

$searchStep
[1] 1e-05

$gridDouble
[1] TRUE

$gridSize
[1] 0.1

$maxit
[1] 1000

$minit
[1] 5

$muBound
[1] 2

$restartMax
[1] 10

$restartFactor
[1] 0.999

$nRestart
[1] 1

$dataTable
   id t      y (Intercept)     a_1    a_2    a_3    a_4    b_1_1  b_1_2  b_1_3
1   1 1 6.6657           1 0.36464 3.1527 6.3218 1.3359 0.066482 1.1496 2.3052
2   2 1 6.6773           1 0.37156 3.1864 6.4079 1.3265 0.069030 1.1839 2.3810
3   3 1 6.7468           1 0.36464 3.2064 6.4100 1.2624 0.066482 1.1692 2.3374
4   4 1 6.8438           1 0.39204 3.2153 6.4830 1.2734 0.076848 1.2605 2.5416
5   5 1 6.8567           1 0.39204 3.2153 6.4733 1.2873 0.076848 1.2605 2.5378
6   6 1 6.8640           1 0.38526 3.2280 6.4877 1.2887 0.074214 1.2436 2.4995
7   7 1 6.9118           1 0.37156 3.2546 6.5124 1.2953 0.069030 1.2093 2.4198
8   8 1 6.9401           1 0.39878 3.2569 6.4737 1.2758 0.079511 1.2988 2.5816
9   9 1 6.8836           1 0.39204 3.2261 6.4614 1.2910 0.076848 1.2647 2.5332
10 10 1 6.9363           1 0.42527 3.2608 6.4746 1.2834 0.090426 1.3867 2.7535
11 11 1 7.0093           1 0.42527 3.2873 6.5256 1.3027 0.090426 1.3980 2.7751
12 12 1 7.1320           1 0.52473 3.3969 6.6346 1.2996 0.137670 1.7824 3.4814
13 13 1 7.1521           1 0.53063 3.4375 6.6862 1.2964 0.140783 1.8241 3.5479
14 14 1 7.2281           1 0.51282 3.4717 6.6819 1.3000 0.131494 1.7803 3.4266
15 15 1 7.1964           1 0.50078 3.4506 6.6026 1.2982 0.125388 1.7280 3.3064
16 16 1 7.1740           1 0.47623 3.4620 6.5775 1.2782 0.113399 1.6487 3.1325
17 17 1 7.1810           1 0.48243 3.5127 6.5521 1.2577 0.116367 1.6946 3.1609
18 18 1 7.2519           1 0.48243 3.5571 6.5536 1.2804 0.116367 1.7160 3.1616
19 19 1 7.3099           1 0.48243 3.6193 6.5948 1.2528 0.116367 1.7460 3.1815
20 20 1 7.3597           1 0.48243 3.6735 6.6466 1.2447 0.116367 1.7722 3.2065
     b_1_4  b_2_2  b_2_3  b_2_4  b_3_3  b_3_4   b_4_4
1  0.48712 4.9699 19.931 4.2117 19.982 8.4451 0.89228
2  0.49287 5.0764 20.418 4.2266 20.531 8.5000 0.87977
3  0.46032 5.1405 20.553 4.0477 20.544 8.0919 0.79679
4  0.49922 5.1690 20.845 4.0943 21.015 8.2554 0.81076
5  0.50466 5.1690 20.813 4.1389 20.952 8.3328 0.82851
6  0.49650 5.2101 20.942 4.1601 21.045 8.3609 0.83041
7  0.48129 5.2963 21.196 4.2158 21.206 8.4357 0.83893
8  0.50878 5.3038 21.085 4.1553 20.955 8.2595 0.81389
9  0.50614 5.2037 20.845 4.1650 20.875 8.3420 0.83340
10 0.54578 5.3164 21.112 4.1848 20.960 8.3094 0.82353
11 0.55399 5.4031 21.451 4.2823 21.292 8.5008 0.84851
12 0.68195 5.7693 22.537 4.4146 22.009 8.6224 0.84451
13 0.68792 5.9083 22.984 4.4565 22.353 8.6682 0.84037
14 0.66667 6.0262 23.197 4.5132 22.324 8.6865 0.84501
15 0.65012 5.9534 22.783 4.4797 21.797 8.5716 0.84270
16 0.60870 5.9926 22.771 4.4249 21.632 8.4071 0.81683
17 0.60675 6.1697 23.016 4.4180 21.465 8.2406 0.79091
18 0.61769 6.3263 23.312 4.5544 21.475 8.3911 0.81969
19 0.60439 6.5495 23.868 4.5342 21.745 8.2620 0.78476
20 0.60047 6.7473 24.416 4.5724 22.089 8.2730 0.77463

$olsParam
    a_0     a_1     a_2     a_3    a_t1   b_1_1   b_1_2   b_1_3  b_1_t1   b_2_2 
-113.75  -60.50   87.95  -70.47  331.73  -25.36   12.13  -17.76  114.29   -6.71 
  b_2_3  b_2_t1   b_3_3  b_3_t1 b_t1_t1 sigmaSq 
  -3.63  -35.70   16.58  -13.66 -133.83    0.00 

$gridAdj
 [1]  1.0000e+00 -5.4582e-13  1.0435e-12 -1.1353e-12  3.7878e-12 -9.6345e-14
 [7]  2.1095e-13 -2.5613e-13  1.2098e-12 -6.4745e-14 -8.4618e-14 -2.8502e-13
[13]  3.1153e-13 -3.9348e-13 -6.1907e-13

$gridParam
    a_0     a_1     a_2     a_3    a_t1   b_1_1   b_1_2   b_1_3  b_1_t1   b_2_2 
-113.74  -60.50   87.95  -70.47  331.73  -25.36   12.13  -17.76  114.29   -6.71 
  b_2_3  b_2_t1   b_3_3  b_3_t1 b_t1_t1 sigmaSq   gamma 
  -3.63  -35.70   16.58  -13.66 -133.83    0.00    0.05 

$gridLogl
[1] 59.145

$mleParam
    a_0     a_1     a_2     a_3    a_t1   b_1_1   b_1_2   b_1_3  b_1_t1   b_2_2 
-113.63  -60.43   87.86  -70.40  331.41  -25.35   12.11  -17.74  114.19   -6.71 
  b_2_3  b_2_t1   b_3_3  b_3_t1 b_t1_t1 sigmaSq   gamma 
  -3.63  -35.67   16.57  -13.65 -133.69    0.00    0.00 

$mleCov
          a_0   a_1   a_2   a_3  a_t1 b_1_1 b_1_2 b_1_3 b_1_t1 b_2_2 b_2_3
a_0      0.94  0.01 -0.12 -0.23  0.01 -0.04  0.06 -0.03   0.02 -0.01  0.02
a_1      0.01  1.06 -0.04 -0.08  0.16 -0.14  0.13 -0.22   0.04 -0.02  0.01
a_2     -0.12 -0.04  0.79 -0.35 -0.10  0.03 -0.04  0.02  -0.01 -0.05 -0.08
a_3     -0.23 -0.08 -0.35  0.30 -0.20  0.06 -0.07  0.05  -0.02  0.05  0.03
a_t1     0.01  0.16 -0.10 -0.20  1.28 -0.26  0.36 -0.20   0.11 -0.06  0.03
b_1_1   -0.04 -0.14  0.03  0.06 -0.26  1.20 -0.31  0.11  -0.10  0.05  0.00
b_1_2    0.06  0.13 -0.04 -0.07  0.36 -0.31  1.17 -0.60   0.06 -0.08 -0.03
b_1_3   -0.03 -0.22  0.02  0.05 -0.20  0.11 -0.60  0.37  -0.23  0.06  0.01
b_1_t1   0.02  0.04 -0.01 -0.02  0.11 -0.10  0.06 -0.23   1.01 -0.01  0.01
b_2_2   -0.01 -0.02 -0.05  0.05 -0.06  0.05 -0.08  0.06  -0.01  0.76 -0.37
b_2_3    0.02  0.01 -0.08  0.03  0.03  0.00 -0.03  0.01   0.01 -0.37  0.23
b_2_t1   0.00  0.00 -0.03  0.01 -0.06  0.00 -0.02  0.00  -0.02 -0.07 -0.10
b_3_3    0.03  0.03  0.09 -0.07  0.08 -0.03  0.09 -0.05   0.03  0.17 -0.13
b_3_t1  -0.01 -0.05  0.04  0.04 -0.23  0.09 -0.11  0.08  -0.08  0.06  0.04
b_t1_t1  0.05  0.14 -0.02 -0.05  0.25 -0.21  0.30 -0.17   0.09 -0.05  0.02
sigmaSq  0.00  0.00  0.00  0.00  0.00  0.00  0.00  0.00   0.00  0.00  0.00
gamma   -0.02 -0.06  0.01  0.02 -0.11  0.09 -0.12  0.07  -0.04  0.02  0.00
        b_2_t1 b_3_3 b_3_t1 b_t1_t1 sigmaSq gamma
a_0       0.00  0.03  -0.01    0.05       0 -0.02
a_1       0.00  0.03  -0.05    0.14       0 -0.06
a_2      -0.03  0.09   0.04   -0.02       0  0.01
a_3       0.01 -0.07   0.04   -0.05       0  0.02
a_t1     -0.06  0.08  -0.23    0.25       0 -0.11
b_1_1     0.00 -0.03   0.09   -0.21       0  0.09
b_1_2    -0.02  0.09  -0.11    0.30       0 -0.12
b_1_3     0.00 -0.05   0.08   -0.17       0  0.07
b_1_t1   -0.02  0.03  -0.08    0.09       0 -0.04
b_2_2    -0.07  0.17   0.06   -0.05       0  0.02
b_2_3    -0.10 -0.13   0.04    0.02       0  0.00
b_2_t1    0.77  0.12  -0.36   -0.08       0  0.00
b_3_3     0.12  0.10  -0.09    0.06       0 -0.01
b_3_t1   -0.36 -0.09   0.27   -0.25       0  0.04
b_t1_t1  -0.08  0.06  -0.25    1.20       0 -0.09
sigmaSq   0.00  0.00   0.00    0.00       0  0.00
gamma     0.00 -0.01   0.04   -0.09       0  0.04

$mleLogl
[1] 64.458

$nIter
[1] 21

$code
[1] 1

$nFuncEval
[1] 285

$olsStdEr
    a_0     a_1     a_2     a_3    a_t1   b_1_1   b_1_2   b_1_3  b_1_t1   b_2_2 
 210.61   94.95   36.38   50.49  129.78   21.16    9.15   11.62   38.90    3.50 
  b_2_3  b_2_t1   b_3_3  b_3_t1 b_t1_t1 
   3.45   14.84    7.12   12.39   65.35 

$olsLogl
[1] 64.458

$fitted
       [,1]
 [1,] 6.665
 [2,] 6.679
 [3,] 6.757
 [4,] 6.840
 [5,] 6.858
 [6,] 6.884
 [7,] 6.906
 [8,] 6.917
 [9,] 6.872
[10,] 6.941
[11,] 7.020
[12,] 7.129
[13,] 7.159
[14,] 7.221
[15,] 7.192
[16,] 7.185
[17,] 7.184
[18,] 7.257
[19,] 7.297
[20,] 7.366

$resid
   residuals
1      0.001
2     -0.001
3     -0.010
4      0.004
5     -0.002
6     -0.020
7      0.006
8      0.023
9      0.012
10    -0.004
11    -0.010
12     0.003
13    -0.007
14     0.007
15     0.004
16    -0.011
17    -0.003
18    -0.005
19     0.013
20    -0.007

$olsResid
     1      2      3      4      5      6      7      8      9     10     11 
 0.001 -0.001 -0.010  0.004 -0.001 -0.020  0.006  0.024  0.012 -0.004 -0.010 
    12     13     14     15     16     17     18     19     20 
 0.003 -0.006  0.007  0.005 -0.011 -0.003 -0.004  0.013 -0.006 

$olsSkewness
[1] 0.37175

$olsSkewnessOkay
[1] FALSE

$truncNorm
[1] FALSE

$zIntercept
[1] FALSE

$timeEffect
[1] FALSE

$searchScale
[1] NA

$call
frontierTranslogRay(yNames = c("qCrop", "qAnimal"), xNames = c("qLabor", 
    "land", "qVarInput"), data = germanFarms)

$validObs
   1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16 
TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE 
  17   18   19   20 
TRUE TRUE TRUE TRUE 

$yNames
[1] "qCrop"   "qAnimal"

$xNames
[1] "qLabor"    "land"      "qVarInput"

$distance
 [1]  784.98  794.20  851.33  938.08  950.23  957.21 1004.10 1032.91  976.13
[10] 1028.94 1106.91 1251.32 1276.85 1377.65 1334.66 1305.03 1314.16 1410.71
[19] 1494.96 1571.32

$theta_1
 [1] 1.3359 1.3265 1.2624 1.2734 1.2873 1.2887 1.2953 1.2758 1.2910 1.2834
[11] 1.3027 1.2996 1.2964 1.3000 1.2982 1.2782 1.2577 1.2804 1.2528 1.2447

class
[1] "frontierTranslogRay" "frontierQuad"        "frontier"           
> 
> proc.time()
   user  system elapsed 
  0.434   0.047   0.475 
