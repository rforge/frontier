THIS IS THE CHANGELOG OF THE "frontier" PACKAGE

Please note that only the most significant changes are reported here.
A full ChangeLog is available in the log messages of the SVN repository
on R-Forge.


            CHANGES IN VERSION 0.991-2

* fixed bug #469: it is possible (again) now to estimate frontiers
with argument "ineffDecrease" set to FALSE (e.g. cost frontiers)

* the ratio between the density function and the cumulative distribution
function ("den(a)/dis(a)") is calculated by "dexp(denlog(a)-dislog(a))"
now, because the new approach is capable to calculate this ratio even
if "a" is smaller than -37.5


            CHANGES IN VERSION 0.991-0

* removed argument "modelType": the model type is derived from argument
"zNames" (NULL or not NULL) now

* the C function "pnorm", which is included in the R software, is used instead
of the Fortran function "dis", which is included in the Frontier 4.1 software,
to calculate the cumulative distribution of the standard normal distribution

* the C function "dnorm", which is included in the R software, is used instead
of the Fortran function "den", which is included in the Frontier 4.1 software,
to calculate the density of the standard normal distribution

* the logarithm of the density function of the standard normal distribution
is calculated directly with the C function "pnorm" with argument "give_log"
equal to 1 (TRUE) now

* the parameters of the X variables are no longer named "beta_0", "beta_1",
"beta_2" etc. but "(Intercept)", "<varName1>", "<varName2>" etc.
(as returned by lm())

* the parameters of the Z variables are no longer named "delta_0", "delta_1",
"delta_2" etc. but "Z_(Intercept)", "Z_<varName1>", "Z_<varName2>" etc.

* the "logLik" method for objects of class "frontier" has a new argument
"newParam" now: if this argument is provided by the user, the log-likelihood
value of the model 'object' is calculated with these (new) parameters

* added argument "muBound": in case of an Error Components Frontier (ECF)
with the inefficiency terms "u" following a truncated normal distribution
with mean "mu", argument "muBound" can be used to restrict "mu" to be in
the interval "+/- muBound * sigma_u", where "sigma_u" is the standard
deviation of "u".


            CHANGES IN VERSION 0.99-2

* argument 'maxit' can be zero now


            CHANGES IN VERSION 0.99-0

* corrected and considerably improved documentation of function "fontier"

* changed order of arguments of function "frontier"

* removed arguments "crossSectionName" and "timePeriodName" from function
"frontier": in case of cross-section data, these variables (information) are
not needed, and in case of panel data, the information on the panel structure
has to be added to the data set by the function "plm.data" of the "plm" package

* argument "modelType" of function "frontier" must be "ECF" or "EEF" now

* replaced argument "funtionType" of function "frontier"
by argument "ineffDecrease"

* renamed argument "eta" of function "frontier" as "timeEffect"

* split argument "mu" of function "frontier" into "truncNorm"
and "zIntercept"

* increased default value of argument "maxit" of function "frontier" to 1000

* renamed argument "step1" of function "frontier" as "searchStep"

* renamed argument "tol2" of function "frontier" as "searchTol"

* replaced argument "indic" of function "frontier" by "searchScale"

* renamed argument "gridno" of function "frontier" as "gridSize"

* renamed argument "igrid2" of function "frontier" as "gridDouble"

* renamed argument "iprint" of function "frontier" as "printIter"

* removed arguments "qxNames" and "quadHalf" from function "frontier",
because quadratic or translog frontiers can be estimated with function
"frontierQuad" now

* added "logLik" method for objects of class "frontier"

* added function "frontierQuad" for estimating quadratic and translog frontiers

* added function "frontierTranslogRay" for estimating stochastic ray
translog frontier functions

* added the generic function "efficiencies" and corresponding methods
for default objects and objects of class "frontier"

* added "elas" method for objects of class "frontierQuad"

* function frontier() and frontierQuad() return the (matched) call now

* the matrix of efficiency estimates returned by "frontier" has row names
(cross section units) and possibly column names (time period) now



            CHANGES IN VERSION 0.9-9 AND BEFORE

* please take a look at the log messages of the SVN repository on R-Forge