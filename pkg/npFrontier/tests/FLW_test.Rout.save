
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## Code to test function sfaFLW()
> 
> library( "npFrontier" )
Loading required package: np
Nonparametric Kernel Methods for Mixed Datatypes (version 0.60-2)
[vignette("np_faq",package="np") provides answers to frequently asked questions]
Loading required package: bbmle
Loading required package: stats4
> 
> # load data
> data( front41Data, package = "frontier" )
> 
> # function for printing objects returned by sfaFLW():
> printFLW <- function( x ) {
+   for( i in 1:length( x ) ) {
+     cat( "$", names( x )[ i ], "\n", sep = "" )
+     print( round( x[[ i ]], 2 ) )
+     cat( "\n" )
+   }
+   invisible( x )
+ }
> 
> 
> # semiparametric Cobb-Douglas production frontiers
> # local-constant regression, ls.cv bandwidths
> FLW_Result <- sfaFLW( log( output ) ~ log( capital ) + log( labour ),
+   data = front41Data )
Multistart 1 of 2 |Multistart 1 of 2 |Multistart 1 of 2 |Multistart 1 of 2 /Multistart 1 of 2 -Multistart 1 of 2 |Multistart 1 of 2 |Multistart 2 of 2 |Multistart 2 of 2 |Multistart 2 of 2 /Multistart 2 of 2 -Multistart 2 of 2 |Multistart 2 of 2 |                   > 
> printFLW( FLW_Result )
$mu
[1] 0.21

$mhat
 [1] 2.79 3.14 3.40 2.79 2.84 3.00 2.11 3.29 2.81 2.96 1.55 3.22 3.02 2.59 2.75
[16] 2.98 3.27 3.05 3.02 3.21 3.27 2.92 3.37 2.13 2.13 3.41 3.25 3.05 2.52 2.36
[31] 1.48 0.72 2.83 2.99 3.13 3.16 3.54 2.78 3.03 2.75 2.76 3.04 3.37 2.97 3.45
[46] 2.78 3.44 2.90 3.05 2.75 3.02 3.24 3.52 2.81 3.05 3.12 1.40 3.43 3.26 2.85

$mprime
       [,1]  [,2]
 [1,] -0.02 -1.17
 [2,]  0.09  1.68
 [3,]  0.13  1.26
 [4,] -0.02 -0.53
 [5,] -0.02  1.66
 [6,]  0.55  0.42
 [7,]  0.05 -0.04
 [8,]  0.11  1.95
 [9,]  0.09  0.57
[10,]  0.21 -0.01
[11,]  0.00  0.00
[12,]  0.08  0.33
[13,] -0.11  2.06
[14,]  0.01  1.66
[15,]  0.00  0.02
[16,]  0.18  0.01
[17,]  0.06 -0.61
[18,]  0.02  0.50
[19,]  0.04  0.57
[20,]  0.18 -0.75
[21,]  0.21  1.67
[22,]  0.08 -0.37
[23,]  0.17  1.14
[24,]  0.03  0.03
[25,]  0.17 -0.31
[26,]  0.14  0.94
[27,]  0.08  2.15
[28,] -0.07  2.13
[29,]  0.00 -0.01
[30,]  0.60  1.47
[31,]  0.00  0.00
[32,]  0.00  0.00
[33,]  0.16  0.93
[34,] -0.09 -1.53
[35,]  0.11  1.48
[36,]  0.09  1.84
[37,]  0.13  0.76
[38,] -0.07  0.91
[39,]  0.27 -1.35
[40,]  0.00 -0.02
[41,]  0.00  1.92
[42,] -0.05  2.20
[43,]  0.14  1.41
[44,] -0.03  0.52
[45,]  0.13  0.87
[46,] -0.04 -0.14
[47,]  0.11  1.32
[48,] -0.04  1.37
[49,] -0.07  2.14
[50,] -0.07  0.55
[51,]  0.22 -0.55
[52,]  0.06 -1.35
[53,]  0.10  1.06
[54,] -0.06  0.41
[55,]  0.13  0.42
[56,]  0.07 -2.08
[57,]  0.00  0.00
[58,]  0.07  1.54
[59,]  0.07 -1.08
[60,] -0.07  1.09

$e
 [1] -0.03  0.26 -0.15  0.00 -0.14 -0.06  0.01  0.00  0.08 -0.13  0.00  0.61
[13] -0.39 -0.16  0.00 -0.50 -0.15  0.00  0.26 -0.06 -0.21 -0.03  0.02  0.00
[25] -0.07  0.30  0.23 -0.03  0.00 -0.27  0.00  0.00  0.20 -0.47 -0.96  0.51
[37]  0.15  0.11 -0.31  0.00  0.01 -0.06  0.04  0.27 -0.18 -0.05  0.25  0.06
[49] -0.24 -0.21  0.19  0.26  0.27 -0.05  0.07  0.08  0.00 -0.15  0.26  0.01

$sigma.sq
[1] 0.1

$lambda
[1] 1.5

$sigma.u
[1] 0.27

$sigma.v
[1] 0.18

$bw
[1] 0.55 0.08

> round( residuals( FLW_Result, which = "first" ), 2 )
 [1] -0.03  0.26 -0.15  0.00 -0.14 -0.06  0.01  0.00  0.08 -0.13  0.00  0.61
[13] -0.39 -0.16  0.00 -0.50 -0.15  0.00  0.26 -0.06 -0.21 -0.03  0.02  0.00
[25] -0.07  0.30  0.23 -0.03  0.00 -0.27  0.00  0.00  0.20 -0.47 -0.96  0.51
[37]  0.15  0.11 -0.31  0.00  0.01 -0.06  0.04  0.27 -0.18 -0.05  0.25  0.06
[49] -0.24 -0.21  0.19  0.26  0.27 -0.05  0.07  0.08  0.00 -0.15  0.26  0.01
> round( residuals( FLW_Result ), 2 )
 [1] -0.24  0.05 -0.37 -0.21 -0.35 -0.27 -0.20 -0.21 -0.13 -0.34 -0.21  0.39
[13] -0.60 -0.37 -0.21 -0.71 -0.36 -0.21  0.05 -0.28 -0.43 -0.24 -0.19 -0.21
[25] -0.28  0.08  0.01 -0.24 -0.21 -0.48 -0.21 -0.21 -0.01 -0.68 -1.18  0.30
[37] -0.06 -0.10 -0.53 -0.21 -0.21 -0.27 -0.17  0.06 -0.39 -0.26  0.04 -0.16
[49] -0.45 -0.42 -0.03  0.05  0.06 -0.26 -0.14 -0.14 -0.21 -0.36  0.04 -0.20
> all.equal( residuals( FLW_Result, which = "final" ),
+   residuals( FLW_Result ) )
[1] TRUE
> 
> round( fitted( FLW_Result, which = "first" ), 2 )
 [1] 2.58 2.93 3.19 2.58 2.63 2.79 1.89 3.07 2.59 2.75 1.33 3.01 2.81 2.38 2.54
[16] 2.77 3.06 2.84 2.81 3.00 3.05 2.70 3.16 1.92 1.92 3.20 3.03 2.84 2.31 2.15
[31] 1.26 0.51 2.62 2.78 2.92 2.94 3.32 2.57 2.82 2.54 2.55 2.82 3.16 2.75 3.23
[46] 2.57 3.22 2.69 2.84 2.53 2.80 3.03 3.31 2.60 2.84 2.91 1.18 3.21 3.04 2.63
> round( fitted( FLW_Result ), 2 )
 [1] 2.79 3.14 3.40 2.79 2.84 3.00 2.11 3.29 2.81 2.96 1.55 3.22 3.02 2.59 2.75
[16] 2.98 3.27 3.05 3.02 3.21 3.27 2.92 3.37 2.13 2.13 3.41 3.25 3.05 2.52 2.36
[31] 1.48 0.72 2.83 2.99 3.13 3.16 3.54 2.78 3.03 2.75 2.76 3.04 3.37 2.97 3.45
[46] 2.78 3.44 2.90 3.05 2.75 3.02 3.24 3.52 2.81 3.05 3.12 1.40 3.43 3.26 2.85
> all.equal( fitted( FLW_Result, which = "frontier" ),
+   fitted( FLW_Result ) )
[1] TRUE
> 
> round( gradients( FLW_Result ), 2 )
       [,1]  [,2]
 [1,] -0.02 -1.17
 [2,]  0.09  1.68
 [3,]  0.13  1.26
 [4,] -0.02 -0.53
 [5,] -0.02  1.66
 [6,]  0.55  0.42
 [7,]  0.05 -0.04
 [8,]  0.11  1.95
 [9,]  0.09  0.57
[10,]  0.21 -0.01
[11,]  0.00  0.00
[12,]  0.08  0.33
[13,] -0.11  2.06
[14,]  0.01  1.66
[15,]  0.00  0.02
[16,]  0.18  0.01
[17,]  0.06 -0.61
[18,]  0.02  0.50
[19,]  0.04  0.57
[20,]  0.18 -0.75
[21,]  0.21  1.67
[22,]  0.08 -0.37
[23,]  0.17  1.14
[24,]  0.03  0.03
[25,]  0.17 -0.31
[26,]  0.14  0.94
[27,]  0.08  2.15
[28,] -0.07  2.13
[29,]  0.00 -0.01
[30,]  0.60  1.47
[31,]  0.00  0.00
[32,]  0.00  0.00
[33,]  0.16  0.93
[34,] -0.09 -1.53
[35,]  0.11  1.48
[36,]  0.09  1.84
[37,]  0.13  0.76
[38,] -0.07  0.91
[39,]  0.27 -1.35
[40,]  0.00 -0.02
[41,]  0.00  1.92
[42,] -0.05  2.20
[43,]  0.14  1.41
[44,] -0.03  0.52
[45,]  0.13  0.87
[46,] -0.04 -0.14
[47,]  0.11  1.32
[48,] -0.04  1.37
[49,] -0.07  2.14
[50,] -0.07  0.55
[51,]  0.22 -0.55
[52,]  0.06 -1.35
[53,]  0.10  1.06
[54,] -0.06  0.41
[55,]  0.13  0.42
[56,]  0.07 -2.08
[57,]  0.00  0.00
[58,]  0.07  1.54
[59,]  0.07 -1.08
[60,] -0.07  1.09
> 
> # local-linear regression, ls.cv bandwidths
> FLW_Result_ll <- sfaFLW( log( output ) ~ log( capital ) + log( labour ),
+   data = front41Data, npArg = list( regtype = "ll" ) )
Multistart 1 of 2 |Multistart 1 of 2 |Multistart 1 of 2 |Multistart 1 of 2 /Multistart 1 of 2 |Multistart 1 of 2 |Multistart 2 of 2 |Multistart 2 of 2 |Multistart 2 of 2 /Multistart 2 of 2 |Multistart 2 of 2 |Multistart 2 of 2 /Multistart 2 of 2 -                   > 
> printFLW( FLW_Result_ll )
$mu
[1] 0.3

$mhat
 [1] 3.04 3.30 3.42 2.91 2.90 2.96 2.52 3.42 2.78 2.90 1.90 3.08 3.42 2.79 2.47
[16] 3.02 3.29 3.14 3.09 3.12 3.21 2.67 3.27 2.32 2.57 3.32 3.43 3.05 2.39 2.54
[31] 1.63 0.81 2.76 3.38 3.27 3.33 3.57 3.12 3.00 2.56 2.83 3.21 3.39 2.89 3.40
[46] 2.90 3.51 2.94 3.08 3.13 3.06 3.32 3.60 2.87 3.06 3.28 1.49 3.57 3.30 3.05

$mprime
      [,1] [,2]
 [1,] 0.22 0.51
 [2,] 0.28 0.54
 [3,] 0.29 0.55
 [4,] 0.23 0.51
 [5,] 0.21 0.52
 [6,] 0.30 0.54
 [7,] 0.31 0.52
 [8,] 0.28 0.55
 [9,] 0.24 0.50
[10,] 0.29 0.53
[11,] 0.20 0.72
[12,] 0.26 0.52
[13,] 0.27 0.54
[14,] 0.21 0.53
[15,] 0.29 0.50
[16,] 0.27 0.52
[17,] 0.26 0.53
[18,] 0.28 0.53
[19,] 0.28 0.53
[20,] 0.26 0.52
[21,] 0.29 0.54
[22,] 0.23 0.51
[23,] 0.30 0.55
[24,] 0.25 0.50
[25,] 0.31 0.52
[26,] 0.30 0.55
[27,] 0.28 0.54
[28,] 0.25 0.51
[29,] 0.22 0.54
[30,] 0.25 0.50
[31,] 0.16 0.64
[32,] 0.28 0.20
[33,] 0.24 0.50
[34,] 0.27 0.53
[35,] 0.28 0.54
[36,] 0.28 0.54
[37,] 0.29 0.56
[38,] 0.24 0.51
[39,] 0.27 0.52
[40,] 0.21 0.58
[41,] 0.21 0.52
[42,] 0.25 0.52
[43,] 0.29 0.55
[44,] 0.22 0.51
[45,] 0.30 0.55
[46,] 0.23 0.51
[47,] 0.29 0.55
[48,] 0.22 0.51
[49,] 0.25 0.51
[50,] 0.23 0.51
[51,] 0.27 0.52
[52,] 0.26 0.53
[53,] 0.29 0.56
[54,] 0.24 0.50
[55,] 0.29 0.53
[56,] 0.26 0.53
[57,] 0.28 0.10
[58,] 0.28 0.55
[59,] 0.26 0.53
[60,] 0.24 0.51

$e
 [1] -0.19  0.19 -0.08 -0.02 -0.11  0.07 -0.32 -0.05  0.21  0.02 -0.26  0.83
[13] -0.70 -0.26  0.37 -0.45 -0.08  0.00  0.29  0.13 -0.07  0.31  0.22 -0.10
[25] -0.42  0.48  0.13  0.06  0.22 -0.36 -0.06  0.00  0.36 -0.77 -1.01  0.43
[37]  0.21 -0.14 -0.19  0.28  0.03 -0.14  0.11  0.43 -0.04 -0.08  0.26  0.11
[49] -0.18 -0.50  0.23  0.28  0.28 -0.02  0.16  0.01  0.00 -0.21  0.30 -0.10

$sigma.sq
[1] 0.19

$lambda
[1] 1.78

$sigma.u
[1] 0.38

$sigma.v
[1] 0.21

$bw
[1] 3.98 0.69

> round( residuals( FLW_Result_ll, which = "first" ), 2 )
 [1] -0.19  0.19 -0.08 -0.02 -0.11  0.07 -0.32 -0.05  0.21  0.02 -0.26  0.83
[13] -0.70 -0.26  0.37 -0.45 -0.08  0.00  0.29  0.13 -0.07  0.31  0.22 -0.10
[25] -0.42  0.48  0.13  0.06  0.22 -0.36 -0.06  0.00  0.36 -0.77 -1.01  0.43
[37]  0.21 -0.14 -0.19  0.28  0.03 -0.14  0.11  0.43 -0.04 -0.08  0.26  0.11
[49] -0.18 -0.50  0.23  0.28  0.28 -0.02  0.16  0.01  0.00 -0.21  0.30 -0.10
> round( residuals( FLW_Result_ll ), 2 )
 [1] -0.50 -0.11 -0.38 -0.33 -0.41 -0.23 -0.62 -0.35 -0.10 -0.28 -0.56  0.53
[13] -1.00 -0.57  0.07 -0.75 -0.38 -0.30 -0.02 -0.18 -0.37  0.00 -0.09 -0.41
[25] -0.72  0.17 -0.17 -0.24 -0.08 -0.66 -0.37 -0.30  0.06 -1.07 -1.31  0.13
[37] -0.09 -0.45 -0.49 -0.02 -0.27 -0.44 -0.19  0.13 -0.34 -0.38 -0.04 -0.20
[49] -0.48 -0.80 -0.07 -0.02 -0.02 -0.33 -0.15 -0.29 -0.30 -0.51  0.00 -0.40
> 
> round( fitted( FLW_Result_ll, which = "first" ), 2 )
 [1] 2.74 3.00 3.11 2.61 2.60 2.66 2.22 3.12 2.47 2.60 1.59 2.78 3.12 2.49 2.17
[16] 2.72 2.99 2.83 2.78 2.81 2.91 2.37 2.96 2.02 2.27 3.02 3.13 2.75 2.09 2.24
[31] 1.33 0.51 2.46 3.08 2.96 3.03 3.26 2.82 2.69 2.26 2.53 2.90 3.09 2.59 3.10
[46] 2.60 3.21 2.64 2.78 2.82 2.76 3.01 3.30 2.57 2.76 2.97 1.18 3.27 3.00 2.75
> round( fitted( FLW_Result_ll ), 2 )
 [1] 3.04 3.30 3.42 2.91 2.90 2.96 2.52 3.42 2.78 2.90 1.90 3.08 3.42 2.79 2.47
[16] 3.02 3.29 3.14 3.09 3.12 3.21 2.67 3.27 2.32 2.57 3.32 3.43 3.05 2.39 2.54
[31] 1.63 0.81 2.76 3.38 3.27 3.33 3.57 3.12 3.00 2.56 2.83 3.21 3.39 2.89 3.40
[46] 2.90 3.51 2.94 3.08 3.13 3.06 3.32 3.60 2.87 3.06 3.28 1.49 3.57 3.30 3.05
> 
> round( gradients( FLW_Result_ll ), 2 )
      [,1] [,2]
 [1,] 0.22 0.51
 [2,] 0.28 0.54
 [3,] 0.29 0.55
 [4,] 0.23 0.51
 [5,] 0.21 0.52
 [6,] 0.30 0.54
 [7,] 0.31 0.52
 [8,] 0.28 0.55
 [9,] 0.24 0.50
[10,] 0.29 0.53
[11,] 0.20 0.72
[12,] 0.26 0.52
[13,] 0.27 0.54
[14,] 0.21 0.53
[15,] 0.29 0.50
[16,] 0.27 0.52
[17,] 0.26 0.53
[18,] 0.28 0.53
[19,] 0.28 0.53
[20,] 0.26 0.52
[21,] 0.29 0.54
[22,] 0.23 0.51
[23,] 0.30 0.55
[24,] 0.25 0.50
[25,] 0.31 0.52
[26,] 0.30 0.55
[27,] 0.28 0.54
[28,] 0.25 0.51
[29,] 0.22 0.54
[30,] 0.25 0.50
[31,] 0.16 0.64
[32,] 0.28 0.20
[33,] 0.24 0.50
[34,] 0.27 0.53
[35,] 0.28 0.54
[36,] 0.28 0.54
[37,] 0.29 0.56
[38,] 0.24 0.51
[39,] 0.27 0.52
[40,] 0.21 0.58
[41,] 0.21 0.52
[42,] 0.25 0.52
[43,] 0.29 0.55
[44,] 0.22 0.51
[45,] 0.30 0.55
[46,] 0.23 0.51
[47,] 0.29 0.55
[48,] 0.22 0.51
[49,] 0.25 0.51
[50,] 0.23 0.51
[51,] 0.27 0.52
[52,] 0.26 0.53
[53,] 0.29 0.56
[54,] 0.24 0.50
[55,] 0.29 0.53
[56,] 0.26 0.53
[57,] 0.28 0.10
[58,] 0.28 0.55
[59,] 0.26 0.53
[60,] 0.24 0.51
> 
> # local-constant regression, rule-of-thumb bandwidths
> FLW_Result_rot <- sfaFLW( log( output ) ~ log( capital ) + log( labour ),
+   data = front41Data, bw.sel = "rot"  )
> 
> printFLW( FLW_Result_rot )
$mu
[1] 0.24

$mhat
 [1] 2.95 3.21 3.25 3.00 2.89 2.94 2.27 3.25 2.98 2.92 1.84 3.12 3.22 2.86 2.38
[16] 3.09 3.15 3.14 3.12 3.13 3.16 2.93 3.18 2.30 2.30 3.21 3.24 3.10 2.72 2.55
[31] 1.55 0.74 2.96 3.20 3.20 3.22 3.29 3.03 3.08 2.78 2.89 3.09 3.24 2.93 3.24
[46] 3.01 3.27 2.90 3.10 3.01 3.11 3.16 3.29 3.02 3.08 3.18 1.42 3.26 3.16 3.06

$mprime
       [,1]  [,2]
 [1,] -0.07  0.33
 [2,]  0.09  0.22
 [3,]  0.09  0.20
 [4,] -0.03  0.31
 [5,] -0.06  0.26
 [6,]  0.37  0.15
 [7,]  0.12 -0.19
 [8,]  0.04  0.24
 [9,]  0.16  0.23
[10,]  0.38  0.20
[11,]  0.21  1.08
[12,]  0.08  0.26
[13,] -0.01  0.29
[14,] -0.04  0.24
[15,]  0.13 -0.09
[16,]  0.17  0.19
[17,] -0.04  0.34
[18,]  0.15  0.19
[19,]  0.16  0.19
[20,]  0.07  0.26
[21,]  0.17  0.17
[22,]  0.14  0.26
[23,]  0.17  0.16
[24,] -0.04  0.27
[25,]  0.17 -0.20
[26,]  0.15  0.17
[27,]  0.02  0.25
[28,]  0.04  0.28
[29,]  0.31  0.33
[30,]  0.69  0.37
[31,]  0.00  0.23
[32,]  0.00  0.00
[33,]  0.23  0.23
[34,] -0.02  0.31
[35,]  0.12  0.20
[36,]  0.08  0.22
[37,]  0.04  0.21
[38,] -0.07  0.37
[39,]  0.16  0.20
[40,]  0.05  0.36
[41,] -0.05  0.27
[42,] -0.05  0.36
[43,]  0.09  0.20
[44,] -0.06  0.30
[45,]  0.12  0.18
[46,] -0.01  0.30
[47,]  0.02  0.24
[48,] -0.06  0.26
[49,]  0.02  0.30
[50,] -0.07  0.36
[51,]  0.14  0.20
[52,] -0.03  0.33
[53,]  0.00  0.25
[54,]  0.06  0.26
[55,]  0.21  0.17
[56,]  0.01  0.29
[57,]  0.00  0.00
[58,] -0.01  0.27
[59,] -0.03  0.33
[60,] -0.02  0.33

$e
 [1] -0.17  0.21  0.02 -0.18 -0.17  0.02 -0.13  0.06 -0.06 -0.07 -0.27  0.73
[13] -0.56 -0.40  0.39 -0.58 -0.01 -0.07  0.19  0.04 -0.09 -0.01  0.23 -0.15
[25] -0.21  0.52  0.25 -0.05 -0.18 -0.44 -0.05  0.00  0.10 -0.65 -1.01  0.47
[37]  0.42 -0.12 -0.34 -0.01 -0.10 -0.10  0.19  0.33  0.05 -0.25  0.44  0.08
[49] -0.27 -0.45  0.11  0.37  0.53 -0.24  0.07  0.04  0.00  0.03  0.38 -0.18

$sigma.sq
[1] 0.15

$lambda
[1] 1.15

$sigma.u
[1] 0.29

$sigma.v
[1] 0.26

$bw
log(capital)  log(labour) 
        0.49         0.46 

> round( residuals( FLW_Result_rot, which = "first" ), 2 )
 [1] -0.17  0.21  0.02 -0.18 -0.17  0.02 -0.13  0.06 -0.06 -0.07 -0.27  0.73
[13] -0.56 -0.40  0.39 -0.58 -0.01 -0.07  0.19  0.04 -0.09 -0.01  0.23 -0.15
[25] -0.21  0.52  0.25 -0.05 -0.18 -0.44 -0.05  0.00  0.10 -0.65 -1.01  0.47
[37]  0.42 -0.12 -0.34 -0.01 -0.10 -0.10  0.19  0.33  0.05 -0.25  0.44  0.08
[49] -0.27 -0.45  0.11  0.37  0.53 -0.24  0.07  0.04  0.00  0.03  0.38 -0.18
> round( residuals( FLW_Result_rot ), 2 )
 [1] -0.41 -0.02 -0.21 -0.42 -0.40 -0.21 -0.37 -0.17 -0.30 -0.30 -0.50  0.49
[13] -0.80 -0.64  0.16 -0.82 -0.24 -0.30 -0.05 -0.20 -0.32 -0.25  0.00 -0.38
[25] -0.45  0.29  0.02 -0.29 -0.41 -0.67 -0.28 -0.24 -0.14 -0.89 -1.24  0.24
[37]  0.18 -0.35 -0.57 -0.24 -0.33 -0.33 -0.04  0.09 -0.19 -0.48  0.21 -0.15
[49] -0.51 -0.68 -0.12  0.13  0.29 -0.47 -0.17 -0.19 -0.24 -0.20  0.14 -0.42
> 
> round( fitted( FLW_Result_rot, which = "first" ), 2 )
 [1] 2.72 2.98 3.02 2.76 2.66 2.70 2.03 3.01 2.74 2.69 1.60 2.88 2.98 2.63 2.15
[16] 2.85 2.92 2.91 2.88 2.90 2.93 2.69 2.95 2.06 2.07 2.97 3.01 2.86 2.48 2.32
[31] 1.31 0.51 2.72 2.96 2.96 2.98 3.06 2.79 2.84 2.55 2.65 2.86 3.01 2.70 3.01
[46] 2.77 3.03 2.66 2.87 2.77 2.88 2.92 3.05 2.78 2.85 2.95 1.18 3.03 2.92 2.83
> round( fitted( FLW_Result_rot ), 2 )
 [1] 2.95 3.21 3.25 3.00 2.89 2.94 2.27 3.25 2.98 2.92 1.84 3.12 3.22 2.86 2.38
[16] 3.09 3.15 3.14 3.12 3.13 3.16 2.93 3.18 2.30 2.30 3.21 3.24 3.10 2.72 2.55
[31] 1.55 0.74 2.96 3.20 3.20 3.22 3.29 3.03 3.08 2.78 2.89 3.09 3.24 2.93 3.24
[46] 3.01 3.27 2.90 3.10 3.01 3.11 3.16 3.29 3.02 3.08 3.18 1.42 3.26 3.16 3.06
> 
> round( gradients( FLW_Result_rot ), 2 )
       [,1]  [,2]
 [1,] -0.07  0.33
 [2,]  0.09  0.22
 [3,]  0.09  0.20
 [4,] -0.03  0.31
 [5,] -0.06  0.26
 [6,]  0.37  0.15
 [7,]  0.12 -0.19
 [8,]  0.04  0.24
 [9,]  0.16  0.23
[10,]  0.38  0.20
[11,]  0.21  1.08
[12,]  0.08  0.26
[13,] -0.01  0.29
[14,] -0.04  0.24
[15,]  0.13 -0.09
[16,]  0.17  0.19
[17,] -0.04  0.34
[18,]  0.15  0.19
[19,]  0.16  0.19
[20,]  0.07  0.26
[21,]  0.17  0.17
[22,]  0.14  0.26
[23,]  0.17  0.16
[24,] -0.04  0.27
[25,]  0.17 -0.20
[26,]  0.15  0.17
[27,]  0.02  0.25
[28,]  0.04  0.28
[29,]  0.31  0.33
[30,]  0.69  0.37
[31,]  0.00  0.23
[32,]  0.00  0.00
[33,]  0.23  0.23
[34,] -0.02  0.31
[35,]  0.12  0.20
[36,]  0.08  0.22
[37,]  0.04  0.21
[38,] -0.07  0.37
[39,]  0.16  0.20
[40,]  0.05  0.36
[41,] -0.05  0.27
[42,] -0.05  0.36
[43,]  0.09  0.20
[44,] -0.06  0.30
[45,]  0.12  0.18
[46,] -0.01  0.30
[47,]  0.02  0.24
[48,] -0.06  0.26
[49,]  0.02  0.30
[50,] -0.07  0.36
[51,]  0.14  0.20
[52,] -0.03  0.33
[53,]  0.00  0.25
[54,]  0.06  0.26
[55,]  0.21  0.17
[56,]  0.01  0.29
[57,]  0.00  0.00
[58,] -0.01  0.27
[59,] -0.03  0.33
[60,] -0.02  0.33
> 
> # local-linear regression with rule-of-thumb bandwidths
> FLW_Result_ll_rot <- sfaFLW( log( output ) ~ log( capital ) + log( labour ),
+   data = front41Data, bw.sel = "rot", npArg = list( regtype = "ll" ) )
> 
> printFLW( FLW_Result_ll_rot )
$mu
[1] 0.27

$mhat
 [1] 2.88 3.30 3.42 2.91 2.80 2.97 2.16 3.39 2.88 2.90 1.67 3.10 3.32 2.77 2.41
[16] 3.06 3.18 3.16 3.12 3.12 3.25 2.80 3.31 2.20 2.26 3.36 3.38 3.06 2.51 2.40
[31] 1.54 0.78 2.84 3.27 3.28 3.32 3.56 2.99 3.04 2.58 2.80 3.08 3.40 2.85 3.43
[46] 2.92 3.47 2.80 3.07 2.95 3.10 3.19 3.54 2.93 3.08 3.23 1.45 3.46 3.19 3.02

$mprime
       [,1]  [,2]
 [1,] -0.11  0.45
 [2,]  0.16  0.59
 [3,]  0.16  0.66
 [4,]  0.04  0.48
 [5,] -0.09  0.41
 [6,]  0.36  0.62
 [7,]  0.27 -0.82
 [8,]  0.11  0.68
 [9,]  0.18  0.36
[10,]  0.36  0.60
[11,]  0.44  0.95
[12,]  0.13  0.51
[13,]  0.03  0.67
[14,] -0.04  0.40
[15,]  0.29 -0.02
[16,]  0.24  0.43
[17,]  0.00  0.60
[18,]  0.22  0.50
[19,]  0.23  0.47
[20,]  0.13  0.52
[21,]  0.25  0.56
[22,]  0.13  0.40
[23,]  0.24  0.59
[24,]  0.10  0.54
[25,]  0.37 -0.58
[26,]  0.22  0.61
[27,]  0.09  0.68
[28,]  0.10  0.51
[29,]  0.34  0.42
[30,]  0.46  0.47
[31,]  0.70  0.82
[32,] -0.01  0.69
[33,]  0.27  0.32
[34,]  0.01  0.65
[35,]  0.18  0.57
[36,]  0.14  0.61
[37,]  0.12  0.77
[38,] -0.06  0.51
[39,]  0.23  0.42
[40,]  0.11  0.53
[41,] -0.04  0.42
[42,] -0.03  0.55
[43,]  0.16  0.64
[44,] -0.02  0.44
[45,]  0.19  0.64
[46,]  0.06  0.48
[47,]  0.09  0.74
[48,] -0.12  0.41
[49,]  0.08  0.53
[50,] -0.09  0.49
[51,]  0.21  0.46
[52,]  0.00  0.61
[53,]  0.06  0.79
[54,]  0.10  0.45
[55,]  0.29  0.49
[56,]  0.07  0.60
[57,]  0.00  0.05
[58,]  0.03  0.77
[59,]  0.00  0.61
[60,]  0.04  0.52

$e
 [1] -0.07  0.15 -0.12 -0.06 -0.05  0.02  0.01 -0.05  0.07 -0.01 -0.07  0.78
[13] -0.63 -0.27  0.39 -0.52  0.00 -0.06  0.22  0.08 -0.14  0.14  0.14 -0.02
[25] -0.14  0.40  0.15  0.02  0.07 -0.25 -0.01  0.00  0.25 -0.69 -1.06  0.41
[37]  0.18 -0.04 -0.26  0.23  0.02 -0.05  0.07  0.44 -0.10 -0.13  0.27  0.21
[49] -0.21 -0.36  0.16  0.37  0.31 -0.12  0.10  0.03  0.00 -0.13  0.38 -0.10

$sigma.sq
[1] 0.15

$lambda
[1] 1.67

$sigma.u
[1] 0.34

$sigma.v
[1] 0.2

$bw
log(capital)  log(labour) 
        0.49         0.46 

> round( residuals( FLW_Result_ll_rot, which = "first" ), 2 )
 [1] -0.07  0.15 -0.12 -0.06 -0.05  0.02  0.01 -0.05  0.07 -0.01 -0.07  0.78
[13] -0.63 -0.27  0.39 -0.52  0.00 -0.06  0.22  0.08 -0.14  0.14  0.14 -0.02
[25] -0.14  0.40  0.15  0.02  0.07 -0.25 -0.01  0.00  0.25 -0.69 -1.06  0.41
[37]  0.18 -0.04 -0.26  0.23  0.02 -0.05  0.07  0.44 -0.10 -0.13  0.27  0.21
[49] -0.21 -0.36  0.16  0.37  0.31 -0.12  0.10  0.03  0.00 -0.13  0.38 -0.10
> round( residuals( FLW_Result_ll_rot ), 2 )
 [1] -0.33 -0.11 -0.39 -0.33 -0.32 -0.24 -0.26 -0.32 -0.20 -0.28 -0.34  0.52
[13] -0.90 -0.54  0.13 -0.79 -0.27 -0.32 -0.04 -0.19 -0.41 -0.12 -0.13 -0.29
[25] -0.41  0.14 -0.12 -0.25 -0.20 -0.52 -0.27 -0.27 -0.02 -0.96 -1.32  0.14
[37] -0.09 -0.31 -0.53 -0.04 -0.25 -0.32 -0.20  0.17 -0.37 -0.40  0.00 -0.06
[49] -0.47 -0.63 -0.10  0.10  0.04 -0.39 -0.17 -0.24 -0.27 -0.40  0.11 -0.37
> 
> round( fitted( FLW_Result_ll_rot, which = "first" ), 2 )
 [1] 2.61 3.04 3.15 2.64 2.53 2.70 1.89 3.12 2.61 2.63 1.40 2.83 3.05 2.50 2.14
[16] 2.79 2.91 2.89 2.85 2.86 2.98 2.53 3.04 1.93 2.00 3.09 3.11 2.79 2.24 2.13
[31] 1.27 0.51 2.57 3.00 3.01 3.05 3.29 2.72 2.77 2.31 2.53 2.81 3.13 2.59 3.16
[46] 2.65 3.21 2.54 2.80 2.68 2.83 2.92 3.27 2.66 2.81 2.96 1.18 3.19 2.92 2.75
> round( fitted( FLW_Result_ll_rot ), 2 )
 [1] 2.88 3.30 3.42 2.91 2.80 2.97 2.16 3.39 2.88 2.90 1.67 3.10 3.32 2.77 2.41
[16] 3.06 3.18 3.16 3.12 3.12 3.25 2.80 3.31 2.20 2.26 3.36 3.38 3.06 2.51 2.40
[31] 1.54 0.78 2.84 3.27 3.28 3.32 3.56 2.99 3.04 2.58 2.80 3.08 3.40 2.85 3.43
[46] 2.92 3.47 2.80 3.07 2.95 3.10 3.19 3.54 2.93 3.08 3.23 1.45 3.46 3.19 3.02
> 
> round( gradients( FLW_Result_ll_rot ), 2 )
       [,1]  [,2]
 [1,] -0.11  0.45
 [2,]  0.16  0.59
 [3,]  0.16  0.66
 [4,]  0.04  0.48
 [5,] -0.09  0.41
 [6,]  0.36  0.62
 [7,]  0.27 -0.82
 [8,]  0.11  0.68
 [9,]  0.18  0.36
[10,]  0.36  0.60
[11,]  0.44  0.95
[12,]  0.13  0.51
[13,]  0.03  0.67
[14,] -0.04  0.40
[15,]  0.29 -0.02
[16,]  0.24  0.43
[17,]  0.00  0.60
[18,]  0.22  0.50
[19,]  0.23  0.47
[20,]  0.13  0.52
[21,]  0.25  0.56
[22,]  0.13  0.40
[23,]  0.24  0.59
[24,]  0.10  0.54
[25,]  0.37 -0.58
[26,]  0.22  0.61
[27,]  0.09  0.68
[28,]  0.10  0.51
[29,]  0.34  0.42
[30,]  0.46  0.47
[31,]  0.70  0.82
[32,] -0.01  0.69
[33,]  0.27  0.32
[34,]  0.01  0.65
[35,]  0.18  0.57
[36,]  0.14  0.61
[37,]  0.12  0.77
[38,] -0.06  0.51
[39,]  0.23  0.42
[40,]  0.11  0.53
[41,] -0.04  0.42
[42,] -0.03  0.55
[43,]  0.16  0.64
[44,] -0.02  0.44
[45,]  0.19  0.64
[46,]  0.06  0.48
[47,]  0.09  0.74
[48,] -0.12  0.41
[49,]  0.08  0.53
[50,] -0.09  0.49
[51,]  0.21  0.46
[52,]  0.00  0.61
[53,]  0.06  0.79
[54,]  0.10  0.45
[55,]  0.29  0.49
[56,]  0.07  0.60
[57,]  0.00  0.05
[58,]  0.03  0.77
[59,]  0.00  0.61
[60,]  0.04  0.52
> 
> # local-constant regression, ls.cv bandwidths
> FLW_Result_aic <- sfaFLW( log( output ) ~ log( capital ) + log( labour ),
+   data = front41Data, bw.sel = "cv.aic" )
Multistart 1 of 2 |Multistart 1 of 2 |Multistart 1 of 2 |Multistart 1 of 2 /Multistart 1 of 2 |Multistart 1 of 2 |Multistart 1 of 2 /Multistart 1 of 2 -Multistart 2 of 2 |Multistart 2 of 2 |Multistart 2 of 2 /Multistart 2 of 2 -Multistart 2 of 2 |Multistart 2 of 2 |                   > 
> printFLW( FLW_Result_aic )
$mu
[1] 0.25

$mhat
 [1] 2.94 3.23 3.28 2.96 2.87 3.04 2.35 3.27 2.95 3.03 1.74 3.12 3.24 2.84 2.54
[16] 3.13 3.16 3.18 3.16 3.13 3.22 2.89 3.24 2.38 2.42 3.26 3.26 3.08 2.73 2.70
[31] 1.53 0.76 2.95 3.22 3.23 3.24 3.32 3.02 3.11 2.76 2.87 3.09 3.27 2.90 3.28
[46] 2.97 3.30 2.88 3.09 3.00 3.14 3.17 3.32 2.99 3.15 3.19 1.44 3.30 3.17 3.04

$mprime
       [,1]  [,2]
 [1,] -0.03  0.35
 [2,]  0.06  0.28
 [3,]  0.07  0.26
 [4,]  0.00  0.35
 [5,] -0.02  0.24
 [6,]  0.36  0.09
 [7,]  0.24 -0.29
 [8,]  0.05  0.29
 [9,]  0.11  0.35
[10,]  0.32  0.13
[11,]  0.09  1.02
[12,]  0.05  0.36
[13,]  0.03  0.34
[14,] -0.01  0.22
[15,]  0.28 -0.08
[16,]  0.11  0.29
[17,]  0.01  0.40
[18,]  0.10  0.27
[19,]  0.10  0.27
[20,]  0.05  0.35
[21,]  0.12  0.23
[22,]  0.10  0.29
[23,]  0.11  0.22
[24,]  0.25  0.33
[25,]  0.33 -0.29
[26,]  0.10  0.23
[27,]  0.04  0.30
[28,]  0.03  0.39
[29,]  0.19  0.30
[30,]  0.44  0.42
[31,] -0.01  0.07
[32,]  0.00  0.00
[33,]  0.16  0.36
[34,]  0.02  0.36
[35,]  0.07  0.27
[36,]  0.06  0.29
[37,]  0.05  0.26
[38,] -0.02  0.44
[39,]  0.10  0.31
[40,]  0.04  0.42
[41,] -0.02  0.24
[42,] -0.01  0.44
[43,]  0.07  0.26
[44,] -0.02  0.28
[45,]  0.08  0.24
[46,]  0.00  0.36
[47,]  0.04  0.28
[48,] -0.02  0.25
[49,]  0.02  0.40
[50,] -0.03  0.43
[51,]  0.09  0.30
[52,]  0.01  0.39
[53,]  0.04  0.28
[54,]  0.04  0.36
[55,]  0.15  0.22
[56,]  0.03  0.35
[57,]  0.00  0.00
[58,]  0.03  0.30
[59,]  0.01  0.39
[60,]  0.00  0.42

$e
 [1] -0.14  0.21  0.01 -0.12 -0.13 -0.06 -0.20  0.06 -0.02 -0.16 -0.16  0.75
[13] -0.57 -0.37  0.25 -0.60  0.00 -0.09  0.17  0.06 -0.13  0.04  0.19 -0.22
[25] -0.31  0.49  0.25 -0.02 -0.16 -0.56 -0.01  0.00  0.12 -0.65 -1.02  0.47
[37]  0.40 -0.09 -0.35  0.03 -0.06 -0.08  0.18  0.37  0.02 -0.19  0.43  0.12
[49] -0.24 -0.42  0.10  0.37  0.51 -0.19  0.02  0.05  0.00  0.01  0.38 -0.14

$sigma.sq
[1] 0.16

$lambda
[1] 1.29

$sigma.u
[1] 0.32

$sigma.v
[1] 0.25

$bw
[1] 0.75 0.35

> round( residuals( FLW_Result_aic, which = "first" ), 2 )
 [1] -0.14  0.21  0.01 -0.12 -0.13 -0.06 -0.20  0.06 -0.02 -0.16 -0.16  0.75
[13] -0.57 -0.37  0.25 -0.60  0.00 -0.09  0.17  0.06 -0.13  0.04  0.19 -0.22
[25] -0.31  0.49  0.25 -0.02 -0.16 -0.56 -0.01  0.00  0.12 -0.65 -1.02  0.47
[37]  0.40 -0.09 -0.35  0.03 -0.06 -0.08  0.18  0.37  0.02 -0.19  0.43  0.12
[49] -0.24 -0.42  0.10  0.37  0.51 -0.19  0.02  0.05  0.00  0.01  0.38 -0.14
> round( residuals( FLW_Result_aic ), 2 )
 [1] -0.39 -0.04 -0.24 -0.38 -0.39 -0.31 -0.45 -0.19 -0.28 -0.41 -0.41  0.50
[13] -0.82 -0.62  0.00 -0.86 -0.26 -0.34 -0.09 -0.20 -0.38 -0.21 -0.06 -0.47
[25] -0.56  0.24  0.00 -0.27 -0.42 -0.82 -0.27 -0.25 -0.13 -0.91 -1.27  0.22
[37]  0.15 -0.34 -0.60 -0.22 -0.31 -0.33 -0.07  0.12 -0.23 -0.44  0.18 -0.14
[49] -0.49 -0.67 -0.15  0.12  0.26 -0.44 -0.24 -0.20 -0.25 -0.24  0.13 -0.39
> 
> round( fitted( FLW_Result_aic, which = "first" ), 2 )
 [1] 2.69 2.98 3.03 2.70 2.62 2.79 2.10 3.02 2.70 2.78 1.49 2.87 2.99 2.59 2.28
[16] 2.87 2.91 2.93 2.90 2.88 2.96 2.63 2.99 2.13 2.16 3.01 3.01 2.83 2.47 2.44
[31] 1.28 0.51 2.70 2.97 2.97 2.99 3.07 2.77 2.86 2.51 2.61 2.84 3.02 2.65 3.03
[46] 2.71 3.05 2.63 2.84 2.75 2.89 2.92 3.07 2.73 2.90 2.94 1.18 3.05 2.92 2.79
> round( fitted( FLW_Result_aic ), 2 )
 [1] 2.94 3.23 3.28 2.96 2.87 3.04 2.35 3.27 2.95 3.03 1.74 3.12 3.24 2.84 2.54
[16] 3.13 3.16 3.18 3.16 3.13 3.22 2.89 3.24 2.38 2.42 3.26 3.26 3.08 2.73 2.70
[31] 1.53 0.76 2.95 3.22 3.23 3.24 3.32 3.02 3.11 2.76 2.87 3.09 3.27 2.90 3.28
[46] 2.97 3.30 2.88 3.09 3.00 3.14 3.17 3.32 2.99 3.15 3.19 1.44 3.30 3.17 3.04
> 
> round( gradients( FLW_Result_aic ), 2 )
       [,1]  [,2]
 [1,] -0.03  0.35
 [2,]  0.06  0.28
 [3,]  0.07  0.26
 [4,]  0.00  0.35
 [5,] -0.02  0.24
 [6,]  0.36  0.09
 [7,]  0.24 -0.29
 [8,]  0.05  0.29
 [9,]  0.11  0.35
[10,]  0.32  0.13
[11,]  0.09  1.02
[12,]  0.05  0.36
[13,]  0.03  0.34
[14,] -0.01  0.22
[15,]  0.28 -0.08
[16,]  0.11  0.29
[17,]  0.01  0.40
[18,]  0.10  0.27
[19,]  0.10  0.27
[20,]  0.05  0.35
[21,]  0.12  0.23
[22,]  0.10  0.29
[23,]  0.11  0.22
[24,]  0.25  0.33
[25,]  0.33 -0.29
[26,]  0.10  0.23
[27,]  0.04  0.30
[28,]  0.03  0.39
[29,]  0.19  0.30
[30,]  0.44  0.42
[31,] -0.01  0.07
[32,]  0.00  0.00
[33,]  0.16  0.36
[34,]  0.02  0.36
[35,]  0.07  0.27
[36,]  0.06  0.29
[37,]  0.05  0.26
[38,] -0.02  0.44
[39,]  0.10  0.31
[40,]  0.04  0.42
[41,] -0.02  0.24
[42,] -0.01  0.44
[43,]  0.07  0.26
[44,] -0.02  0.28
[45,]  0.08  0.24
[46,]  0.00  0.36
[47,]  0.04  0.28
[48,] -0.02  0.25
[49,]  0.02  0.40
[50,] -0.03  0.43
[51,]  0.09  0.30
[52,]  0.01  0.39
[53,]  0.04  0.28
[54,]  0.04  0.36
[55,]  0.15  0.22
[56,]  0.03  0.35
[57,]  0.00  0.00
[58,]  0.03  0.30
[59,]  0.01  0.39
[60,]  0.00  0.42
> 
> # local-linear regression, ls.cv bandwidths
> FLW_Result_ll_aic <- sfaFLW( log( output ) ~ log( capital ) + log( labour ),
+   data = front41Data, bw.sel = "cv.aic", npArg = list( regtype = "ll" ) )
Multistart 1 of 2 |Multistart 1 of 2 |Multistart 1 of 2 |Multistart 1 of 2 /Multistart 1 of 2 |Multistart 1 of 2 |Multistart 2 of 2 |Multistart 2 of 2 |Multistart 2 of 2 /Multistart 2 of 2 |Multistart 2 of 2 |                   > 
> printFLW( FLW_Result_ll_aic )
$mu
[1] 0.32

$mhat
 [1] 3.06 3.33 3.43 2.92 2.92 3.01 2.53 3.43 2.78 2.94 2.12 3.11 3.42 2.81 2.43
[16] 3.06 3.30 3.17 3.12 3.14 3.25 2.66 3.31 2.20 2.58 3.36 3.43 3.08 2.36 2.49
[31] 1.95 0.83 2.76 3.39 3.30 3.35 3.55 3.14 3.03 2.62 2.85 3.22 3.41 2.91 3.42
[46] 2.92 3.51 2.96 3.10 3.14 3.10 3.32 3.57 2.89 3.10 3.29 1.12 3.54 3.31 3.07

$mprime
      [,1] [,2]
 [1,] 0.22 0.54
 [2,] 0.24 0.54
 [3,] 0.24 0.54
 [4,] 0.24 0.54
 [5,] 0.22 0.54
 [6,] 0.29 0.54
 [7,] 0.33 0.52
 [8,] 0.23 0.54
 [9,] 0.26 0.54
[10,] 0.29 0.54
[11,] 0.25 0.54
[12,] 0.25 0.54
[13,] 0.23 0.54
[14,] 0.23 0.54
[15,] 0.32 0.52
[16,] 0.26 0.54
[17,] 0.23 0.54
[18,] 0.26 0.54
[19,] 0.26 0.54
[20,] 0.25 0.54
[21,] 0.26 0.54
[22,] 0.26 0.54
[23,] 0.26 0.54
[24,] 0.31 0.53
[25,] 0.32 0.52
[26,] 0.25 0.54
[27,] 0.23 0.54
[28,] 0.24 0.54
[29,] 0.28 0.54
[30,] 0.29 0.54
[31,] 0.23 0.54
[32,] 0.31 0.53
[33,] 0.27 0.54
[34,] 0.22 0.54
[35,] 0.25 0.54
[36,] 0.24 0.54
[37,] 0.23 0.54
[38,] 0.22 0.54
[39,] 0.26 0.54
[40,] 0.23 0.54
[41,] 0.23 0.54
[42,] 0.22 0.54
[43,] 0.24 0.54
[44,] 0.23 0.54
[45,] 0.25 0.54
[46,] 0.24 0.54
[47,] 0.23 0.54
[48,] 0.22 0.54
[49,] 0.24 0.54
[50,] 0.22 0.54
[51,] 0.26 0.54
[52,] 0.22 0.54
[53,] 0.22 0.54
[54,] 0.25 0.54
[55,] 0.27 0.54
[56,] 0.23 0.54
[57,] 0.23 0.54
[58,] 0.22 0.54
[59,] 0.23 0.54
[60,] 0.24 0.54

$e
 [1] -0.18  0.19 -0.07 -0.02 -0.10  0.05 -0.30 -0.03  0.23  0.00 -0.46  0.83
[13] -0.67 -0.27  0.43 -0.46 -0.07 -0.01  0.27  0.12 -0.09  0.34  0.20  0.04
[25] -0.40  0.47  0.15  0.06  0.28 -0.28 -0.36  0.00  0.38 -0.75 -1.02  0.43
[37]  0.25 -0.14 -0.20  0.24  0.03 -0.13  0.12  0.44 -0.04 -0.07  0.29  0.11
[49] -0.18 -0.49  0.22  0.30  0.33 -0.01  0.14  0.02  0.39 -0.16  0.31 -0.10

$sigma.sq
[1] 0.21

$lambda
[1] 1.94

$sigma.u
[1] 0.41

$sigma.v
[1] 0.21

$bw
[1]       1.82 1448053.51

> round( residuals( FLW_Result_ll_aic, which = "first" ), 2 )
 [1] -0.18  0.19 -0.07 -0.02 -0.10  0.05 -0.30 -0.03  0.23  0.00 -0.46  0.83
[13] -0.67 -0.27  0.43 -0.46 -0.07 -0.01  0.27  0.12 -0.09  0.34  0.20  0.04
[25] -0.40  0.47  0.15  0.06  0.28 -0.28 -0.36  0.00  0.38 -0.75 -1.02  0.43
[37]  0.25 -0.14 -0.20  0.24  0.03 -0.13  0.12  0.44 -0.04 -0.07  0.29  0.11
[49] -0.18 -0.49  0.22  0.30  0.33 -0.01  0.14  0.02  0.39 -0.16  0.31 -0.10
> round( residuals( FLW_Result_ll_aic ), 2 )
 [1] -0.51 -0.14 -0.39 -0.34 -0.43 -0.28 -0.63 -0.36 -0.10 -0.32 -0.78  0.50
[13] -1.00 -0.59  0.11 -0.79 -0.39 -0.34 -0.05 -0.21 -0.42  0.01 -0.13 -0.29
[25] -0.73  0.14 -0.17 -0.27 -0.05 -0.61 -0.68 -0.32  0.06 -1.08 -1.34  0.11
[37] -0.08 -0.46 -0.52 -0.08 -0.29 -0.46 -0.21  0.12 -0.37 -0.39 -0.03 -0.21
[49] -0.51 -0.81 -0.11 -0.03  0.01 -0.34 -0.19 -0.31  0.07 -0.48 -0.01 -0.42
> 
> round( fitted( FLW_Result_ll_aic, which = "first" ), 2 )
 [1] 2.73 3.00 3.11 2.60 2.59 2.68 2.21 3.11 2.45 2.62 1.79 2.79 3.09 2.49 2.10
[16] 2.73 2.98 2.85 2.80 2.82 2.93 2.34 2.98 1.88 2.26 3.03 3.11 2.75 2.03 2.16
[31] 1.62 0.50 2.44 3.06 2.97 3.03 3.23 2.81 2.70 2.30 2.53 2.89 3.09 2.58 3.09
[46] 2.60 3.18 2.63 2.78 2.81 2.77 3.00 3.25 2.56 2.78 2.97 0.79 3.22 2.99 2.75
> round( fitted( FLW_Result_ll_aic ), 2 )
 [1] 3.06 3.33 3.43 2.92 2.92 3.01 2.53 3.43 2.78 2.94 2.12 3.11 3.42 2.81 2.43
[16] 3.06 3.30 3.17 3.12 3.14 3.25 2.66 3.31 2.20 2.58 3.36 3.43 3.08 2.36 2.49
[31] 1.95 0.83 2.76 3.39 3.30 3.35 3.55 3.14 3.03 2.62 2.85 3.22 3.41 2.91 3.42
[46] 2.92 3.51 2.96 3.10 3.14 3.10 3.32 3.57 2.89 3.10 3.29 1.12 3.54 3.31 3.07
> 
> round( gradients( FLW_Result_ll_aic ), 2 )
      [,1] [,2]
 [1,] 0.22 0.54
 [2,] 0.24 0.54
 [3,] 0.24 0.54
 [4,] 0.24 0.54
 [5,] 0.22 0.54
 [6,] 0.29 0.54
 [7,] 0.33 0.52
 [8,] 0.23 0.54
 [9,] 0.26 0.54
[10,] 0.29 0.54
[11,] 0.25 0.54
[12,] 0.25 0.54
[13,] 0.23 0.54
[14,] 0.23 0.54
[15,] 0.32 0.52
[16,] 0.26 0.54
[17,] 0.23 0.54
[18,] 0.26 0.54
[19,] 0.26 0.54
[20,] 0.25 0.54
[21,] 0.26 0.54
[22,] 0.26 0.54
[23,] 0.26 0.54
[24,] 0.31 0.53
[25,] 0.32 0.52
[26,] 0.25 0.54
[27,] 0.23 0.54
[28,] 0.24 0.54
[29,] 0.28 0.54
[30,] 0.29 0.54
[31,] 0.23 0.54
[32,] 0.31 0.53
[33,] 0.27 0.54
[34,] 0.22 0.54
[35,] 0.25 0.54
[36,] 0.24 0.54
[37,] 0.23 0.54
[38,] 0.22 0.54
[39,] 0.26 0.54
[40,] 0.23 0.54
[41,] 0.23 0.54
[42,] 0.22 0.54
[43,] 0.24 0.54
[44,] 0.23 0.54
[45,] 0.25 0.54
[46,] 0.24 0.54
[47,] 0.23 0.54
[48,] 0.22 0.54
[49,] 0.24 0.54
[50,] 0.22 0.54
[51,] 0.26 0.54
[52,] 0.22 0.54
[53,] 0.22 0.54
[54,] 0.25 0.54
[55,] 0.27 0.54
[56,] 0.23 0.54
[57,] 0.23 0.54
[58,] 0.22 0.54
[59,] 0.23 0.54
[60,] 0.24 0.54
> 
> # no intercept
> FLW_Result_rot2 <- sfaFLW( log( output ) ~ log( capital ) + log( labour ) - 1,
+   data = front41Data, bw.sel = "rot"  )
Warning message:
In sfaFLW(log(output) ~ log(capital) + log(labour) - 1, data = front41Data,  :
  the intercept cannot be suppressed in nonparametric regression
> 
> all.equal( FLW_Result_rot, FLW_Result_rot2 )
[1] TRUE
> all.equal( residuals( FLW_Result_rot, which = "first" ),
+   residuals( FLW_Result_rot2, which = "first" ) )
[1] TRUE
> all.equal( residuals( FLW_Result_rot ), residuals( FLW_Result_rot2 ) )
[1] TRUE
> 
> all.equal( fitted( FLW_Result_rot, which = "first" ),
+   fitted( FLW_Result_rot2, which = "first" ) )
[1] TRUE
> all.equal( fitted( FLW_Result_rot ), fitted( FLW_Result_rot2 ) )
[1] TRUE
> 
> all.equal( gradients( FLW_Result_rot ), gradients( FLW_Result_rot2 ) )
[1] TRUE
> 
> # wrong value of argument 'bw.sel'
> try( sfaFLW( log( output ) ~ log( capital ) + log( labour ),
+   data = front41Data, bw.sel = "wrong" ) )
Error in sfaFLW(log(output) ~ log(capital) + log(labour), data = front41Data,  : 
  argument 'bw.sel' must be either 'cv.ls', 'cv.aic', or 'rot'
> 
> # wrong values of argument 'npArg'
> try( sfaFLW( log( output ) ~ log( capital ) + log( labour ),
+   data = front41Data, npArg = "ll" ) )
Error in sfaFLW(log(output) ~ log(capital) + log(labour), data = front41Data,  : 
  argument 'npArg' must be a list
> try( sfaFLW( log( output ) ~ log( capital ) + log( labour ),
+   data = front41Data, npArg = list( bandwidth.compute = FALSE ) ) )
Error in sfaFLW(log(output) ~ log(capital) + log(labour), data = front41Data,  : 
  argument 'npArg' may not be used to specify arguments 'xdat', 'ydat', 'bwmethod', and 'bandwidth.compute'
> try( sfaFLW( log( output ) ~ log( capital ) + log( labour ),
+   data = front41Data, npArg = list( ckertype = "something" ) ) )
Error in match.arg(ckertype) : 
  'arg' should be one of "gaussian", "truncated gaussian", "epanechnikov", "uniform"
> 
> # residuals: wrong value of argument 'which'
> try( residuals( FLW_Result_rot, which = "none" ) )
Error in residuals.sfaFLW(FLW_Result_rot, which = "none") : 
  argument 'which' must be either "first" or "final"
> 
> # fitted: wrong value of argument 'which'
> try( fitted( FLW_Result_rot, which = "final" ) )
Error in fitted.sfaFLW(FLW_Result_rot, which = "final") : 
  argument 'which' must be either "first" or "frontier"
> 
> proc.time()
   user  system elapsed 
  0.992   0.016   0.997 
