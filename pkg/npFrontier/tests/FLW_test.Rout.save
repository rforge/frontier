
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ## Code to test function FLW()
> 
> library( "npFrontier" )
Loading required package: np
Nonparametric Kernel Methods for Mixed Datatypes (version 0.60-2)
[vignette("np_faq",package="np") provides answers to frequently asked questions]
Loading required package: bbmle
Loading required package: stats4
> 
> # load data
> data( front41Data, package = "frontier" )
> 
> # semiparametric local-constant Cobb-Douglas production frontier
> FLW_Result <- FLW( log( front41Data$output ), 
+   cbind( log( front41Data$capital ), log( front41Data$labour ) ) )
Multistart 1 of 2 |Multistart 1 of 2 |Multistart 1 of 2 |Multistart 1 of 2 /Multistart 1 of 2 -Multistart 1 of 2 |Multistart 1 of 2 |Multistart 2 of 2 |Multistart 2 of 2 |Multistart 2 of 2 /Multistart 2 of 2 -Multistart 2 of 2 |Multistart 2 of 2 |                   > 
> for( i in 1:length( FLW_Result ) ) {
+   cat( "$", names( FLW_Result )[ i ], "\n", sep = "" )
+   print( round( FLW_Result[[ i ]], 2 ) )
+   cat( "\n" )
+ }
$mhat
 [1] 2.79 3.14 3.40 2.79 2.84 3.00 2.11 3.29 2.81 2.96 1.55 3.22 3.02 2.59 2.75
[16] 2.98 3.27 3.05 3.02 3.21 3.27 2.92 3.37 2.13 2.13 3.41 3.25 3.05 2.52 2.36
[31] 1.48 0.72 2.83 2.99 3.13 3.16 3.54 2.78 3.03 2.75 2.76 3.04 3.37 2.97 3.45
[46] 2.78 3.44 2.90 3.05 2.75 3.02 3.24 3.52 2.81 3.05 3.12 1.40 3.43 3.26 2.85

$mprime
       [,1]  [,2]
 [1,] -0.02 -1.17
 [2,]  0.09  1.68
 [3,]  0.13  1.26
 [4,] -0.02 -0.53
 [5,] -0.02  1.66
 [6,]  0.55  0.42
 [7,]  0.05 -0.04
 [8,]  0.11  1.95
 [9,]  0.09  0.57
[10,]  0.21 -0.01
[11,]  0.00  0.00
[12,]  0.08  0.33
[13,] -0.11  2.06
[14,]  0.01  1.66
[15,]  0.00  0.02
[16,]  0.18  0.01
[17,]  0.06 -0.61
[18,]  0.02  0.50
[19,]  0.04  0.57
[20,]  0.18 -0.75
[21,]  0.21  1.67
[22,]  0.08 -0.37
[23,]  0.17  1.14
[24,]  0.03  0.03
[25,]  0.17 -0.31
[26,]  0.14  0.94
[27,]  0.08  2.15
[28,] -0.07  2.13
[29,]  0.00 -0.01
[30,]  0.60  1.47
[31,]  0.00  0.00
[32,]  0.00  0.00
[33,]  0.16  0.93
[34,] -0.09 -1.53
[35,]  0.11  1.48
[36,]  0.09  1.84
[37,]  0.13  0.76
[38,] -0.07  0.91
[39,]  0.27 -1.35
[40,]  0.00 -0.02
[41,]  0.00  1.92
[42,] -0.05  2.20
[43,]  0.14  1.41
[44,] -0.03  0.52
[45,]  0.13  0.87
[46,] -0.04 -0.14
[47,]  0.11  1.32
[48,] -0.04  1.37
[49,] -0.07  2.14
[50,] -0.07  0.55
[51,]  0.22 -0.55
[52,]  0.06 -1.35
[53,]  0.10  1.06
[54,] -0.06  0.41
[55,]  0.13  0.42
[56,]  0.07 -2.08
[57,]  0.00  0.00
[58,]  0.07  1.54
[59,]  0.07 -1.08
[60,] -0.07  1.09

$e
 [1] -0.03  0.26 -0.15  0.00 -0.14 -0.06  0.01  0.00  0.08 -0.13  0.00  0.61
[13] -0.39 -0.16  0.00 -0.50 -0.15  0.00  0.26 -0.06 -0.21 -0.03  0.02  0.00
[25] -0.07  0.30  0.23 -0.03  0.00 -0.27  0.00  0.00  0.20 -0.47 -0.96  0.51
[37]  0.15  0.11 -0.31  0.00  0.01 -0.06  0.04  0.27 -0.18 -0.05  0.25  0.06
[49] -0.24 -0.21  0.19  0.26  0.27 -0.05  0.07  0.08  0.00 -0.15  0.26  0.01

$sigma.sq
[1] 0.1

$lambda
[1] 1.5

$sigma.u
[1] 0.27

$sigma.v
[1] 0.18

$bw
[1] 0.55 0.08

> 
> proc.time()
   user  system elapsed 
  0.576   0.040   0.617 
